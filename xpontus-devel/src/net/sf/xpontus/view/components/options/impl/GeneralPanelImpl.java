/*
 * GeneralPanel.java
 *
 * Created on February 16, 2006, 8:16 PM
 */

package net.sf.xpontus.view.components.options.impl;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JComponent;

import net.sf.xpontus.model.options.GeneralOptionModel;
import net.sf.xpontus.view.components.options.IOptionPanel;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.adapter.ComboBoxAdapter;
import com.jgoodies.binding.beans.BeanAdapter;
import com.jgoodies.binding.value.ValueModel;

/**
 *
 * @author  Owner
 */
public class GeneralPanelImpl extends javax.swing.JPanel implements IOptionPanel{
    
    private BeanAdapter adapter;
    
    /** Creates new form GeneralPanel */
    public GeneralPanelImpl() {
        model = new GeneralOptionModel();
        adapter = new BeanAdapter(model, true);
        
        ValueModel stringModel = adapter.getValueModel("theme");
        List possibleValues = new ArrayList();
        possibleValues.add("Java");
        possibleValues.add("System");
        possibleValues.add("Plastic");
        possibleValues.add("Kunststoff");
        themeModel = new ComboBoxAdapter(possibleValues, stringModel);
        
        List iconValues = new ArrayList();
        ValueModel _stringModel = adapter.getValueModel("iconSet");
        iconValues.add("Eclipse");
        iconValues.add("Bingham");
        iconValues.add("Sun");
        iconValues.add("MacOS");
        iconModel = new ComboBoxAdapter(iconValues, _stringModel);
        
        List languageValues = new ArrayList();
        ValueModel _langModel = adapter.getValueModel("language");        
        languageValues.add("English");
        languageValues.add("French");
        languageValues.add("German");
        languageValues.add("Spanish");
        languageModel = new ComboBoxAdapter(languageValues, _langModel);
        
        initComponents();
        read();
    }
    
    public void read(){
        GeneralOptionModel m = new GeneralOptionModel();
        GeneralOptionModel model1 = (GeneralOptionModel)m.load();
        if(model1==null){
            model1 = new GeneralOptionModel();
        }
        model.setConfirmOnExitOption(model1.isConfirmOnExitOption());
        model.setIconSet(model1.getIconSet());
        model.setShowSplashScreen(model1.isShowSplashScreen());
        model.setTheme(model1.getTheme());
	model.setLanguage(model1.getLanguage());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        displaySplashOption = new javax.swing.JCheckBox();
        themeLabel = new javax.swing.JLabel();
        iconSetLabel = new javax.swing.JLabel();
        themesList = new javax.swing.JComboBox();
        iconSetList = new javax.swing.JComboBox();
        confirmOnExitOption = new javax.swing.JCheckBox();
        antialiasOption = new javax.swing.JCheckBox();
        languageLabel = new javax.swing.JLabel();
        languageList = new javax.swing.JComboBox();

        displaySplashOption.setSelected(true);
        displaySplashOption.setText("Show splash screen");
        displaySplashOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        displaySplashOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(displaySplashOption, adapter.getValueModel("showSplashScreen"));

        themeLabel.setText("Theme");

        iconSetLabel.setText("Icon set");

        themesList.setModel(themeModel);

        iconSetList.setModel(iconModel);

        confirmOnExitOption.setSelected(true);
        confirmOnExitOption.setText("Show a confirm dialog before exiting");
        confirmOnExitOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        confirmOnExitOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(confirmOnExitOption, adapter.getValueModel("confirmOnExitOption"));

        antialiasOption.setText("Antialias text (Java 1.5+)");
        antialiasOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        antialiasOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(antialiasOption, adapter.getValueModel("antialias"));

        languageLabel.setText("Language");

        languageList.setModel(languageModel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(antialiasOption)
                    .add(confirmOnExitOption)
                    .add(displaySplashOption, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(themeLabel)
                            .add(iconSetLabel)
                            .add(languageLabel))
                        .add(96, 96, 96)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(languageList, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(themesList, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(iconSetList, 0, 176, Short.MAX_VALUE))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(displaySplashOption)
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(themeLabel)
                    .add(themesList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(iconSetLabel)
                    .add(iconSetList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(languageLabel)
                    .add(languageList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(23, 23, 23)
                .add(antialiasOption)
                .add(24, 24, 24)
                .add(confirmOnExitOption)
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
                    
    /**
     *
     * @return
     */
    public JComponent getControl() {
        return this;
    }
    
    /**
     *
     * @return
     */
    public String getDisplayName() {
        return "General";
    }
    
    public void save(){
        this.model.save();
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox antialiasOption;
    private javax.swing.JCheckBox confirmOnExitOption;
    private javax.swing.JCheckBox displaySplashOption;
    private javax.swing.JLabel iconSetLabel;
    private javax.swing.JComboBox iconSetList;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JComboBox languageList;
    private javax.swing.JLabel themeLabel;
    private javax.swing.JComboBox themesList;
    // End of variables declaration//GEN-END:variables
    private GeneralOptionModel model;
            private ComboBoxAdapter themeModel, iconModel,languageModel;
    
}
