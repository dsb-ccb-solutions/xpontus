/*
 * XMLPanel.java
 *
 * Created on February 16, 2006, 8:08 PM
 */

package net.sf.xpontus.view.components.options.impl;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JComponent;

import net.sf.xpontus.model.options.XMLOptionModel;
import net.sf.xpontus.view.components.options.IOptionPanel;

import com.jgoodies.binding.adapter.ComboBoxAdapter;
import com.jgoodies.binding.beans.BeanAdapter;
import com.jgoodies.binding.value.ValueModel;

/**
 *
 * @author  Owner
 */
public class XMLPanelImpl extends javax.swing.JPanel implements IOptionPanel {
    
    private java.util.Vector vector;
    private BeanAdapter adapter;
    
    /** Creates new form XMLPanel */
    public XMLPanelImpl() {
        model = new XMLOptionModel();
        adapter = new BeanAdapter(model, true);
        initEncoding();
        initComponents();
        read();
    }
    
    public void save(){
        model.save();
    }
    
    
    public void read(){
        XMLOptionModel model1 = (XMLOptionModel)new XMLOptionModel().load();
        if(model1==null){
            model1 = new XMLOptionModel();
        }
        model.setXmlEncoding(model1.getXmlEncoding());
        model.setXsltProcessor(model1.getXsltProcessor());
    }
    
    public void initEncoding(){
        ValueModel stringModel = adapter.getValueModel("xmlEncoding");
        List possibleValues = new ArrayList();
        
        java.util.Iterator it;
        it = java.nio.charset.Charset.availableCharsets().keySet().iterator();
        while(it.hasNext()){
            possibleValues.add(it.next());
        }
        
        encodingListModel = new ComboBoxAdapter(possibleValues, stringModel);
        
        ValueModel _stringModel = adapter.getValueModel("xsltProcessor");
        List _possibleValues = new ArrayList();
        
        _possibleValues.add("Saxon 6.5.5" );
        _possibleValues.add("Xalan 2.7.0");
        _possibleValues.add("Saxon-B 8.5.1");
        _possibleValues.add("Jd.xslt 1.5.5");
        
        processorListModel = new ComboBoxAdapter(_possibleValues, _stringModel);
    }
    
    public JComponent getControl() {
        return this;
    }
    
    public String getDisplayName() {
        return "XML";
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        xsltLabel = new javax.swing.JLabel();
        xmlLabel = new javax.swing.JLabel();
        processorsList = new javax.swing.JComboBox();
        encodingList = new javax.swing.JComboBox();

        xsltLabel.setText("XSLT Processor");

        xmlLabel.setText("Default XML encoding");

        processorsList.setModel(processorListModel);

        encodingList.setModel(encodingListModel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(xsltLabel)
                    .add(xmlLabel))
                .add(55, 55, 55)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(processorsList, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(encodingList, 0, 143, Short.MAX_VALUE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(xsltLabel)
                    .add(processorsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(29, 29, 29)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(xmlLabel)
                    .add(encodingList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(192, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
            
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox encodingList;
    private javax.swing.JComboBox processorsList;
    private javax.swing.JLabel xmlLabel;
    private javax.swing.JLabel xsltLabel;
    // End of variables declaration//GEN-END:variables
    private XMLOptionModel model;
    private ComboBoxAdapter encodingListModel;
    private ComboBoxAdapter  processorListModel;
}
