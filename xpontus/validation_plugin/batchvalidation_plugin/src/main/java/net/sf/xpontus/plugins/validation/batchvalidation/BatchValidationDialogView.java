/*
 * BatchValidationDialogView.java
 *
 * Created on December 4, 2007, 6:57 PM 
 *
 * Copyright (C) 2005-2008 Yves Zoundi
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
package net.sf.xpontus.plugins.validation.batchvalidation;

import java.awt.Frame;
import java.awt.event.ActionListener;
import java.beans.EventHandler;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.JTextField;
import net.sf.xpontus.utils.XPontusComponentsUtils;

/**
 * Dialog class for batch validation
 * @author  Yves Zoundi <yveszoundi at users dot sf dot net>
 * @version 0.0.1
 */
public class BatchValidationDialogView extends javax.swing.JDialog {

    private BatchValidationController controller;

    /** Creates new form BatchValidationDialogView
     * @param parent
     * @param modal 
     */
    public BatchValidationDialogView(Frame parent, boolean modal) {
        super(parent, modal);
        controller = new BatchValidationController(this);
        initComponents();
        this.setTitle("Batch Validation");
        ( (DefaultComboBoxModel)extensionsList.getModel()).addElement("*.xml");
    }

    public JList getPathList() {
        return pathList;
    }

    public JTextField getExtensionTF() {
        return extensionTF;
    }

    public BatchValidationDialogView() {
        this((Frame) XPontusComponentsUtils.getTopComponent().getDisplayComponent(), true);
    }

    public JCheckBox getRecurseOption() {
        return recurseOption;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        extensionsListScrollPane = new javax.swing.JScrollPane();
        extensionsList = new javax.swing.JList();
        extensionsListLabel = new javax.swing.JLabel();
        addExtensionButton = new javax.swing.JButton();
        editExtensionsButton = new javax.swing.JButton();
        extensionTF = new javax.swing.JTextField();
        fileExtensionTF = new javax.swing.JLabel();
        recurseOption = new javax.swing.JCheckBox();
        addPathButton = new javax.swing.JButton();
        pathListScrollPane = new javax.swing.JScrollPane();
        pathList = new javax.swing.JList();
        removePathButton = new javax.swing.JButton();
        removeExtensionButton = new javax.swing.JButton();
        validateButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        extensionsList.setModel(new DefaultComboBoxModel());
        extensionsListScrollPane.setViewportView(extensionsList);

        extensionsListLabel.setText("Extensions list");

        addExtensionButton.setText("Add");
        addExtensionButton.addActionListener(
            (ActionListener)EventHandler.create(
                ActionListener.class,
                controller,
                BatchValidationController.ADD_EXTENSION_METHOD)
        );

        editExtensionsButton.setText("Edit");

        fileExtensionTF.setText("File extension to add");

        recurseOption.setText("Directory recursion");

        addPathButton.setText("Add files/folders");
        addPathButton.addActionListener(
            (ActionListener)EventHandler.create(
                ActionListener.class,
                controller,
                BatchValidationController.ADD_FILE_METHOD)
        );

        pathList.setModel(new DefaultComboBoxModel());
        pathListScrollPane.setViewportView(pathList);

        removePathButton.setText("Remove");
        removePathButton.addActionListener(
            (ActionListener)EventHandler.create(
                ActionListener.class,
                controller,
                BatchValidationController.REMOVE_FILE_METHOD)
        );

        removeExtensionButton.setText("Remove");
        removeExtensionButton.addActionListener(
            (ActionListener)EventHandler.create(
                ActionListener.class,
                controller,
                BatchValidationController.REMOVE_EXTENSION_METHOD)
        );

        validateButton.setText("Validate");
        validateButton.addActionListener(
            (ActionListener)EventHandler.create(
                ActionListener.class,
                controller,
                BatchValidationController.VALIDATE_FILES_METHOD)
        );

        closeButton.setText("Cancel");
        closeButton.addActionListener(
            (ActionListener)EventHandler.create(
                ActionListener.class,
                controller,
                BatchValidationController.CLOSE_WINDOW_METHOD)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(recurseOption)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 356, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(extensionsListLabel)
                        .add(366, 366, 366))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(extensionsListScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(editExtensionsButton)
                                .add(removeExtensionButton))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 154, Short.MAX_VALUE)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(layout.createSequentialGroup()
                                    .add(extensionTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(27, 27, 27)
                                    .add(addExtensionButton))
                                .add(fileExtensionTF)))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(addPathButton)
                            .add(59, 59, 59)
                            .add(pathListScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 214, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(removePathButton))))
                .add(47, 47, 47))
            .add(layout.createSequentialGroup()
                .add(136, 136, 136)
                .add(validateButton)
                .add(91, 91, 91)
                .add(closeButton)
                .addContainerGap(212, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {editExtensionsButton, removeExtensionButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.linkSize(new java.awt.Component[] {closeButton, validateButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(addPathButton)
                    .add(pathListScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(removePathButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(extensionsListLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(editExtensionsButton)
                                .add(20, 20, 20)
                                .add(removeExtensionButton))
                            .add(extensionsListScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(recurseOption))
                    .add(layout.createSequentialGroup()
                        .add(fileExtensionTF)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(extensionTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(addExtensionButton))))
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(validateButton)
                    .add(closeButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addExtensionButton;
    private javax.swing.JButton addPathButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton editExtensionsButton;
    private javax.swing.JTextField extensionTF;
    private javax.swing.JList extensionsList;
    private javax.swing.JLabel extensionsListLabel;
    private javax.swing.JScrollPane extensionsListScrollPane;
    private javax.swing.JLabel fileExtensionTF;
    private javax.swing.JList pathList;
    private javax.swing.JScrollPane pathListScrollPane;
    private javax.swing.JCheckBox recurseOption;
    private javax.swing.JButton removeExtensionButton;
    private javax.swing.JButton removePathButton;
    private javax.swing.JButton validateButton;
    // End of variables declaration//GEN-END:variables
    public JList getExtensionsList() {
        return extensionsList;
    }

    public void setExtensionsList(JList extensionsList) {
        this.extensionsList = extensionsList;
    }
}
