/*
 * ScenarioListView.java
 *
 * Created on February 19, 2006, 1:20 PM
 *
 *  Copyright (C) 2005 Yves Zoundi
 *
 *  This library is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation; either version 2.1 of the License, or
 *  (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

package net.sf.xpontus.view;

import javax.swing.DefaultComboBoxModel;
import javax.swing.ListModel;
import net.sf.xpontus.controller.handlers.ScenarioListController;
import net.sf.xpontus.core.controller.handlers.BaseController;
import net.sf.xpontus.core.utils.L10nHelper;
import net.sf.xpontus.model.ScenarioListModel;

/**
 * XSLT Scenarios list dialog
 * @author Yves Zoundi
 */
public class ScenarioListView extends javax.swing.JDialog  implements java.awt.event.ActionListener{
    
    /** Creates new form ScenarioListView */
    public ScenarioListView(){
        this(XPontusWindow.getInstance().getFrame(), true);
    }
    
    /**
     * Creates new form ScenarioListView
     * @param parent The parent window
     * @param modal Is the dialog modal
     */
    public ScenarioListView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        locale = L10nHelper.getInstance();
        scenarioListModel = new ScenarioListModel();
        scenarioListModel = (ScenarioListModel)scenarioListModel.load();
        vector =  scenarioListModel.getScenarioList();     
        lmodel = new DefaultComboBoxModel(vector);
        initComponents();
        initListeners();
        if(vector.size() > 0){
            scenarioList.setSelectedIndex(0);
        }
    }
    
    /**
     * Return the XSLT scenarios vector
     * @return The XSLT scenarios vector
     */
    public java.util.Vector getVector(){
        return vector;
    }
    
    /**
     * Check if the scenario already exists
     * @param _name The scenario's name
     * @return If the scenario already exists
     */
    public boolean scenarioExist(String _name){
        ListModel _model = scenarioList.getModel();
        for(int i=0;i<_model.getSize();i++){
            if(_model.getElementAt(i).toString().equals(_name)){
                return true;
            }
        }
        return false;
    }
    
    /**
     * Return the XSLT scenarios' list component
     * @return The XSLT scenarios' list component
     */
    public javax.swing.JList getList(){
        return scenarioList;
    }
    
    private void initListeners(){
        controller = new ScenarioListController(this);
        addButton.addActionListener(this);
        removeButton.addActionListener(this);
        editButton.addActionListener(this);
        closeButton.addActionListener(this);
    }
    
    /**
     * Perform an action
     * @param evt An action event
     */
    public void actionPerformed(java.awt.event.ActionEvent evt){
        controller.invokeAction(evt.getActionCommand());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        scenarioList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(locale.getValue("form.scenariolist.title"));
        addButton.setText(locale.getValue("add.key"));
        addButton.setActionCommand("addScenario");

        editButton.setText(locale.getValue("edit.key"));
        editButton.setActionCommand("edit");

        removeButton.setText(locale.getValue("delete.key"));
        removeButton.setActionCommand("remove");

        closeButton.setText(locale.getValue("close.key"));
        closeButton.setActionCommand("close");

        scenarioList.setModel(lmodel);
        scrollPane.setViewportView(scenarioList);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(scrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                        .add(31, 31, 31)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(addButton)
                            .add(editButton)
                            .add(removeButton))
                        .add(31, 31, 31))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(161, 161, 161))))
        );

        layout.linkSize(new java.awt.Component[] {addButton, editButton, removeButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(addButton)
                        .add(25, 25, 25)
                        .add(editButton)
                        .add(28, 28, 28)
                        .add(removeButton))
                    .add(scrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(38, 38, 38)
                .add(closeButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JList scenarioList;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
    private java.util.Vector vector;
    private L10nHelper locale;
    private ScenarioListModel scenarioListModel;
    private BaseController controller;
     private javax.swing.DefaultComboBoxModel lmodel;
}
