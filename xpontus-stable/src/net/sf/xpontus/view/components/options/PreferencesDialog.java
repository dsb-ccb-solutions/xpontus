/*
 * PreferencesDialog.java
 *
 * Created on February 16, 2006, 8:12 PM
 *
 *  Copyright (C) 2005-2007 Yves Zoundi
 *
 *  This library is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation; either version 2.1 of the License, or
 *  (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

package net.sf.xpontus.view.components.options;

import java.awt.BorderLayout;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import net.sf.xpontus.core.utils.IconUtils;
import net.sf.xpontus.view.XPontusWindow;

/**
 * The preferences panel
 * @author  Yves Zoundi
 */
public class PreferencesDialog extends javax.swing.JDialog {
    
    private Map componentMap = new HashMap();
    private DefaultTreeModel model;
    private JComponent selected = new JPanel();
    private IOptionPanel defaultPanel;
    private final JLabel aPanel = new JLabel("Set the application preferences");
    private javax.swing.ImageIcon frameicon;
    private String loc = "/net/sf/xpontus/icons/_PATH_/icone.png";
    private DefaultTreeCellRenderer renderer;
    
    /**
     * The default constructor
     */
    public PreferencesDialog(){
        this(XPontusWindow.getInstance().getFrame(), true);
    }
    
    /** Creates new form PreferencesDialog 
     * @param parent 
     * @param modal 
     */
    public PreferencesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        frameicon = IconUtils.getInstance().getIcon(loc);
        aPanel.setHorizontalTextPosition(JLabel.CENTER);
        aPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defaultPanel = new IOptionPanel(){
            
            public JComponent getControl() {
                return aPanel;
            }
            
            public void read(){}
            
            public void save(){}
            
            public String getDisplayName() {
                return "Preferences";
            }
        };
        initOptions();
        initComponents();
        
        selected = defaultPanel.getControl();
        this.mainPanel.add(selected, BorderLayout.CENTER);
        
        categoryTree.setCellRenderer(renderer);
        this.categoryTree.getSelectionModel().
                setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        this.categoryTree.setSelectionPath(categoryTree.getLeadSelectionPath());
    }
    
    private void initOptions(){
        IOptionPanel panels[] = new IOptionPanel[]{
            defaultPanel,
            new GeneralPanel(),
            new EditorPanel(),
            new ColorOptionPanel(),
            new XMLPanel(),
            new JTidyPanel()
        };
        
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Preferences");
        
        for(int i=0;i<panels.length;i++){
            IOptionPanel p = panels[i];
            String displayName = p.getDisplayName();
            componentMap.put(displayName, p);
            if(i > 0){
                root.add(new DefaultMutableTreeNode(displayName));
            }
        }
        renderer = new DefaultTreeCellRenderer();
        renderer.setOpenIcon(null);
        renderer.setClosedIcon(null);
        renderer.setLeafIcon(frameicon);
        model = new DefaultTreeModel(root);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        scrollPane = new javax.swing.JScrollPane();
        categoryTree = new javax.swing.JTree();
        buttonsPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                onWindowClosing(evt);
            }
        });

        scrollPane.setBorder(null);
        categoryTree.setModel(model);
        categoryTree.setToggleClickCount(-1);
        categoryTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                categoryTreeValueChanged(evt);
            }
        });

        scrollPane.setViewportView(categoryTree);

        getContentPane().add(scrollPane, java.awt.BorderLayout.WEST);

        buttonsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        saveButton.setText(XPontusWindow.getInstance().getI18nMessage("action.closetab.name"));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        buttonsPanel.add(saveButton);

        getContentPane().add(buttonsPanel, java.awt.BorderLayout.SOUTH);

        mainPanel.setLayout(new java.awt.BorderLayout());

        mainPanel.setMinimumSize(new java.awt.Dimension(400, 300));
        mainPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText("You can set the application preferences here.");
        mainPanel.add(infoLabel, java.awt.BorderLayout.NORTH);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void onWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onWindowClosing
        saveButtonActionPerformed(null);
    }//GEN-LAST:event_onWindowClosing
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Iterator it = componentMap.values().iterator();
        while(it.hasNext()){
            IOptionPanel c = (IOptionPanel)it.next();
            c.save();
        }
        setVisible(false);
    }//GEN-LAST:event_saveButtonActionPerformed
    
    private void categoryTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_categoryTreeValueChanged
        String value = categoryTree.getLastSelectedPathComponent().toString();
        
        mainPanel.remove(selected);
        mainPanel.revalidate();
        mainPanel.repaint();
        
        IOptionPanel c = (IOptionPanel)componentMap.get(value);
        selected = c.getControl();
        this.mainPanel.add(selected, BorderLayout.CENTER);
        
        mainPanel.revalidate();
        mainPanel.repaint();
        repaint();
        
        this.infoLabel.setText(c.getDisplayName());
    }//GEN-LAST:event_categoryTreeValueChanged
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JTree categoryTree;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
    
}
