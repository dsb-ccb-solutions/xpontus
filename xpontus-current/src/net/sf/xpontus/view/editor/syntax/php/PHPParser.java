/* Generated By:JavaCC: Do not edit this line. PHPParser.java */
package net.sf.xpontus.view.editor.syntax.php;

import net.sf.xpontus.view.editor.ILexer;
import net.sf.xpontus.view.editor.syntax.CharStream;
import net.sf.xpontus.view.editor.syntax.FastCharStream;
import net.sf.xpontus.view.editor.syntax.ParseException;
import net.sf.xpontus.view.editor.syntax.Token;


public class PHPParser implements ILexer, PHPParserConstants
  {
    static private int[] jj_la1_0;
    static private int[] jj_la1_1;
    static private int[] jj_la1_2;
    static private int[] jj_la1_3;
    static private int[] jj_la1_4;

    static
      {
        jj_la1_0();
        jj_la1_1();
        jj_la1_2();
        jj_la1_3();
        jj_la1_4();
      }

    public PHPParserTokenManager token_source;
    public Token token;
    public Token jj_nt;
    private int jj_ntk;
    private Token jj_scanpos;
    private Token jj_lastpos;
    private int jj_la;
    public boolean lookingAhead = false;
    private boolean jj_semLA;
    private int jj_gen;
    final private int[] jj_la1 = new int[96];
    final private JJCalls[] jj_2_rtns = new JJCalls[30];
    private boolean jj_rescan = false;
    private int jj_gc = 0;
    final private LookaheadSuccess jj_ls = new LookaheadSuccess();
    private java.util.Vector jj_expentries = new java.util.Vector();
    private int[] jj_expentry;
    private int jj_kind = -1;
    private int[] jj_lasttokens = new int[100];
    private int jj_endpos;

    public PHPParser()
      {
        this((FastCharStream) null);
      }

    public PHPParser(CharStream stream)
      {
        token_source = new PHPParserTokenManager(stream);
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;

        for (int i = 0; i < 96; i++)
            jj_la1[i] = -1;

        for (int i = 0; i < jj_2_rtns.length; i++)
            jj_2_rtns[i] = new JJCalls();
      }

    public PHPParser(PHPParserTokenManager tm)
      {
        token_source = tm;
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;

        for (int i = 0; i < 96; i++)
            jj_la1[i] = -1;

        for (int i = 0; i < jj_2_rtns.length; i++)
            jj_2_rtns[i] = new JJCalls();
      }

    final public void PhpPage() throws ParseException
      {
label_1: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case PHP_EXPR:
            case HTML_OTHER:
            case HTML:
                ;

                break;

            default:
                jj_la1[0] = jj_gen;

                break label_1;
              }

            HtmlBlock();
          }

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case PHP_BEGIN:
            jj_consume_token(PHP_BEGIN);
label_2: 
            while (true)
              {
                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case REQUIRE_ONCE:
                case REQUIRE:
                case INCLUDE_ONCE:
                case INCLUDE:
                case DEFINE:
                case ECHO:
                case PRINT:
                case SWITCH:
                case CASE:
                case DFLT:
                case BREAK:
                case RETURN:
                case DO:
                case WHILE:
                case FOREACH:
                case FOR:
                case CONTINUE:
                case IF:
                case FUNCTION:
                case CLASS:
                case VAR:
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case ABSTRACT:
                case FINAL:
                case STATIC:
                case INTERFACE:
                case CONST:
                case CLONE:
                case GLOBAL:
                case ARRAY:
                case NEW:
                case PREDEFINED_CONSTANT:
                case PHP_END:
                case DOLLAR:
                case SEMICOLON:
                case TRY:
                case THROW:
                case IDENTIFIER:
                case 105:
                case 109:
                case 112:
                case 114:
                case 142:
                case 147:
                case 148:
                case 149:
                case 150:
                    ;

                    break;

                default:
                    jj_la1[1] = jj_gen;

                    break label_2;
                  }

                Statement();
              }

            break;

        case 0:
            jj_consume_token(0);

            break;

        default:
            jj_la1[2] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void HtmlBlock() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case HTML:
            jj_consume_token(HTML);

            break;

        case HTML_OTHER:
            jj_consume_token(HTML_OTHER);

            break;

        case PHP_EXPR:
            jj_consume_token(PHP_EXPR);
            Expression();
            jj_consume_token(PHP_END);

            break;

        default:
            jj_la1[3] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void Statement() throws ParseException
      {
        if (jj_2_1(2))
          {
            LabeledStatement();
          }
        else if (jj_2_2(2))
          {
            ClassDeclaration();
          }
        else if (jj_2_3(2))
          {
            InterfaceDeclaration();
          }
        else if (jj_2_4(2))
          {
            ExpressionStatement();
          }
        else
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 109:
                CompoundStatement();

                break;

            case SWITCH:
            case IF:
                SelectionStatement();

                break;

            case DO:
            case WHILE:
            case FOREACH:
            case FOR:
                IterationStatement();

                break;

            case BREAK:
            case RETURN:
            case CONTINUE:
                JumpStatement();

                break;

            case REQUIRE_ONCE:
            case REQUIRE:
            case INCLUDE_ONCE:
            case INCLUDE:
            case 114:
                IncludeStatement();

                break;

            case ECHO:
            case PRINT:
                EchoStatement();

                break;

            case DEFINE:
                DefineStatement();

                break;

            case FUNCTION:
            case VAR:
            case PUBLIC:
            case PRIVATE:
            case PROTECTED:
            case ABSTRACT:
            case FINAL:
            case STATIC:
            case CONST:
            case GLOBAL:
            case DOLLAR:
                MemberDeclaration();

                break;

            case THROW:
                ThrowStatement();

                break;

            case TRY:
                TryBlock();

                break;

            case PHP_END:
            case SEMICOLON:
                EndOfStatement();

                break;

            default:
                jj_la1[4] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }
      }

    final public void ThrowStatement() throws ParseException
      {
        jj_consume_token(THROW);
        ClassInstantiation();
        EndOfStatement();
      }

    final public void TryBlock() throws ParseException
      {
        jj_consume_token(TRY);
        CompoundStatement();
label_3: 
        while (true)
          {
            jj_consume_token(CATCH);
            jj_consume_token(105);
            jj_consume_token(IDENTIFIER);
            Variable();
            jj_consume_token(106);
            CompoundStatement();

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case CATCH:
                ;

                break;

            default:
                jj_la1[5] = jj_gen;

                break label_3;
              }
          }
      }

    final public void EndOfStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case SEMICOLON:
            jj_consume_token(SEMICOLON);

            break;

        case PHP_END:
            EmbeddedHtml();

            break;

        default:
            jj_la1[6] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void EmbeddedHtml() throws ParseException
      {
        jj_consume_token(PHP_END);
label_4: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case HTML_OTHER:
            case HTML:
                ;

                break;

            default:
                jj_la1[7] = jj_gen;

                break label_4;
              }

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case HTML:
                jj_consume_token(HTML);

                break;

            case HTML_OTHER:
                jj_consume_token(HTML_OTHER);

                break;

            default:
                jj_la1[8] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case PHP_BEGIN:
            jj_consume_token(PHP_BEGIN);

            break;

        case 0:
            jj_consume_token(0);

            break;

        default:
            jj_la1[9] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void DefineStatement() throws ParseException
      {
        jj_consume_token(DEFINE);
        jj_consume_token(105);
        String();
        jj_consume_token(107);
        Expression();
        jj_consume_token(106);
        EndOfStatement();
      }

    final public void LabeledStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case CASE:
            jj_consume_token(CASE);
            Expression();
            jj_consume_token(108);
            Statement();

            break;

        case DFLT:
            jj_consume_token(DFLT);
            jj_consume_token(108);
            Statement();

            break;

        default:
            jj_la1[10] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void ExpressionStatement() throws ParseException
      {
        Expression();
        EndOfStatement();
      }

    final public void CompoundStatement() throws ParseException
      {
        jj_consume_token(109);
label_5: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case REQUIRE_ONCE:
            case REQUIRE:
            case INCLUDE_ONCE:
            case INCLUDE:
            case DEFINE:
            case ECHO:
            case PRINT:
            case SWITCH:
            case CASE:
            case DFLT:
            case BREAK:
            case RETURN:
            case DO:
            case WHILE:
            case FOREACH:
            case FOR:
            case CONTINUE:
            case IF:
            case FUNCTION:
            case CLASS:
            case VAR:
            case PUBLIC:
            case PRIVATE:
            case PROTECTED:
            case ABSTRACT:
            case FINAL:
            case STATIC:
            case INTERFACE:
            case CONST:
            case CLONE:
            case GLOBAL:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case PHP_END:
            case DOLLAR:
            case SEMICOLON:
            case TRY:
            case THROW:
            case IDENTIFIER:
            case 105:
            case 109:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                ;

                break;

            default:
                jj_la1[11] = jj_gen;

                break label_5;
              }

            Statement();
          }

        jj_consume_token(110);
      }

    final public void SelectionStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case IF:
            jj_consume_token(IF);
            jj_consume_token(105);
            Expression();
            jj_consume_token(106);
            Statement();
label_6: 
            while (true)
              {
                if (jj_2_5(2))
                  {
                    ;
                  }
                else
                  {
                    break label_6;
                  }

                jj_consume_token(ELSEIF);
                jj_consume_token(105);
                Expression();
                jj_consume_token(106);
                Statement();
              }

            if (jj_2_6(2))
              {
                jj_consume_token(ELSE);
                Statement();
              }
            else
              {
                ;
              }

            break;

        case SWITCH:
            jj_consume_token(SWITCH);
            jj_consume_token(105);
            Expression();
            jj_consume_token(106);
            Statement();

            break;

        default:
            jj_la1[12] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void IterationStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case WHILE:
            jj_consume_token(WHILE);
            jj_consume_token(105);
            Expression();
            jj_consume_token(106);
            Statement();

            break;

        case DO:
            jj_consume_token(DO);
            Statement();
            jj_consume_token(WHILE);
            jj_consume_token(105);
            Expression();
            jj_consume_token(106);
            EndOfStatement();

            break;

        case FOR:
            jj_consume_token(FOR);
            jj_consume_token(105);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 105:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                Expression();

                break;

            default:
                jj_la1[13] = jj_gen;
                ;
              }

            jj_consume_token(SEMICOLON);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 105:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                Expression();

                break;

            default:
                jj_la1[14] = jj_gen;
                ;
              }

            jj_consume_token(SEMICOLON);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 105:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                Expression();

                break;

            default:
                jj_la1[15] = jj_gen;
                ;
              }

            jj_consume_token(106);
            Statement();

            break;

        case FOREACH:
            jj_consume_token(FOREACH);
            jj_consume_token(105);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 105:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                Expression();

                break;

            default:
                jj_la1[16] = jj_gen;
                ;
              }

            jj_consume_token(AS);
            Variable();

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 111:
                jj_consume_token(111);

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 112:
                    jj_consume_token(112);

                    break;

                default:
                    jj_la1[17] = jj_gen;
                    ;
                  }

                Variable();

                break;

            default:
                jj_la1[18] = jj_gen;
                ;
              }

            jj_consume_token(106);
            Statement();

            break;

        default:
            jj_la1[19] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void JumpStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case CONTINUE:
            jj_consume_token(CONTINUE);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
                jj_consume_token(INTEGER_LITERAL);

                break;

            default:
                jj_la1[20] = jj_gen;
                ;
              }

            EndOfStatement();

            break;

        case BREAK:
            jj_consume_token(BREAK);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
                jj_consume_token(INTEGER_LITERAL);

                break;

            default:
                jj_la1[21] = jj_gen;
                ;
              }

            EndOfStatement();

            break;

        case RETURN:
            jj_consume_token(RETURN);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 105:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                Expression();

                break;

            default:
                jj_la1[22] = jj_gen;
                ;
              }

            EndOfStatement();

            break;

        default:
            jj_la1[23] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void ParameterList() throws ParseException
      {
        Parameter();
label_7: 
        while (true)
          {
            if (jj_2_7(2))
              {
                ;
              }
            else
              {
                break label_7;
              }

            jj_consume_token(107);
            Parameter();
          }
      }

    final public void Parameter() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case IDENTIFIER:
            jj_consume_token(IDENTIFIER);

            break;

        default:
            jj_la1[24] = jj_gen;
            ;
          }

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case 112:
            jj_consume_token(112);

            break;

        default:
            jj_la1[25] = jj_gen;
            ;
          }

        Variable();

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case 113:
            jj_consume_token(113);
            Expression();

            break;

        default:
            jj_la1[26] = jj_gen;
            ;
          }
      }

    final public void ClassDeclaration() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case ABSTRACT:
        case FINAL:

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case ABSTRACT:
                jj_consume_token(ABSTRACT);

                break;

            case FINAL:
                jj_consume_token(FINAL);

                break;

            default:
                jj_la1[27] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }

            break;

        default:
            jj_la1[28] = jj_gen;
            ;
          }

        jj_consume_token(CLASS);
        jj_consume_token(IDENTIFIER);

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case EXTENDS:
            jj_consume_token(EXTENDS);
            jj_consume_token(IDENTIFIER);

            break;

        default:
            jj_la1[29] = jj_gen;
            ;
          }

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case IMPLEMENTS:
            jj_consume_token(IMPLEMENTS);
            jj_consume_token(IDENTIFIER);
label_8: 
            while (true)
              {
                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 107:
                    ;

                    break;

                default:
                    jj_la1[30] = jj_gen;

                    break label_8;
                  }

                jj_consume_token(107);
                jj_consume_token(IDENTIFIER);
              }

            break;

        default:
            jj_la1[31] = jj_gen;
            ;
          }

        ClassMembers();
      }

    final public void ClassMembers() throws ParseException
      {
        jj_consume_token(109);
label_9: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case FUNCTION:
            case VAR:
            case PUBLIC:
            case PRIVATE:
            case PROTECTED:
            case ABSTRACT:
            case FINAL:
            case STATIC:
            case CONST:
            case GLOBAL:
            case DOLLAR:
                ;

                break;

            default:
                jj_la1[32] = jj_gen;

                break label_9;
              }

            MemberDeclaration();
          }

        jj_consume_token(110);
      }

    final public void MemberDeclaration() throws ParseException
      {
        if (jj_2_8(2147483647))
          {
label_10: 
            while (true)
              {
                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case FINAL:
                case STATIC:
                    ;

                    break;

                default:
                    jj_la1[33] = jj_gen;

                    break label_10;
                  }

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case FINAL:
                    jj_consume_token(FINAL);

                    break;

                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                    Visibility();

                    break;

                case STATIC:
                    jj_consume_token(STATIC);

                    break;

                default:
                    jj_la1[34] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
                  }
              }

            jj_consume_token(FUNCTION);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 112:
                jj_consume_token(112);

                break;

            default:
                jj_la1[35] = jj_gen;
                ;
              }

            jj_consume_token(IDENTIFIER);
            jj_consume_token(105);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case DOLLAR:
            case IDENTIFIER:
            case 112:
                ParameterList();

                break;

            default:
                jj_la1[36] = jj_gen;
                ;
              }

            jj_consume_token(106);
            CompoundStatement();
          }
        else if (jj_2_9(2147483647))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case PUBLIC:
            case PRIVATE:
            case PROTECTED:
                Visibility();

                break;

            default:
                jj_la1[37] = jj_gen;
                ;
              }

            jj_consume_token(CONST);
            jj_consume_token(IDENTIFIER);
            jj_consume_token(113);
            Expression();
            EndOfStatement();
          }
        else
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case VAR:
            case PUBLIC:
            case PRIVATE:
            case PROTECTED:
            case STATIC:
            case DOLLAR:
label_11: 
                while (true)
                  {
                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case VAR:
                    case PUBLIC:
                    case PRIVATE:
                    case PROTECTED:
                    case STATIC:
                        ;

                        break;

                    default:
                        jj_la1[38] = jj_gen;

                        break label_11;
                      }

                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case VAR:
                        jj_consume_token(VAR);

                        break;

                    case PUBLIC:
                    case PRIVATE:
                    case PROTECTED:
                        Visibility();

                        break;

                    case STATIC:
                        jj_consume_token(STATIC);

                        break;

                    default:
                        jj_la1[39] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                      }
                  }

                jj_consume_token(DOLLAR);
                jj_consume_token(VAR_NAME);

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 113:
                    jj_consume_token(113);
                    Expression();

                    break;

                default:
                    jj_la1[40] = jj_gen;
                    ;
                  }

label_12: 
                while (true)
                  {
                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case 107:
                        ;

                        break;

                    default:
                        jj_la1[41] = jj_gen;

                        break label_12;
                      }

                    jj_consume_token(107);
                    jj_consume_token(DOLLAR);
                    jj_consume_token(VAR_NAME);

                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case 113:
                        jj_consume_token(113);
                        Expression();

                        break;

                    default:
                        jj_la1[42] = jj_gen;
                        ;
                      }
                  }

                EndOfStatement();

                break;

            case GLOBAL:
                jj_consume_token(GLOBAL);
                Variable();
label_13: 
                while (true)
                  {
                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case 107:
                        ;

                        break;

                    default:
                        jj_la1[43] = jj_gen;

                        break label_13;
                      }

                    jj_consume_token(107);
                    Variable();
                  }

                EndOfStatement();

                break;

            case ABSTRACT:
                jj_consume_token(ABSTRACT);

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                    Visibility();

                    break;

                default:
                    jj_la1[44] = jj_gen;
                    ;
                  }

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case STATIC:
                    jj_consume_token(STATIC);

                    break;

                default:
                    jj_la1[45] = jj_gen;
                    ;
                  }

                jj_consume_token(FUNCTION);

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 112:
                    jj_consume_token(112);

                    break;

                default:
                    jj_la1[46] = jj_gen;
                    ;
                  }

                jj_consume_token(IDENTIFIER);
                jj_consume_token(105);

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case DOLLAR:
                case IDENTIFIER:
                case 112:
                    ParameterList();

                    break;

                default:
                    jj_la1[47] = jj_gen;
                    ;
                  }

                jj_consume_token(106);
                EndOfStatement();

                break;

            default:
                jj_la1[48] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }
      }

    final public void InterfaceDeclaration() throws ParseException
      {
        jj_consume_token(INTERFACE);
        jj_consume_token(IDENTIFIER);

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case EXTENDS:
            jj_consume_token(EXTENDS);
            jj_consume_token(IDENTIFIER);
label_14: 
            while (true)
              {
                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 107:
                    ;

                    break;

                default:
                    jj_la1[49] = jj_gen;

                    break label_14;
                  }

                jj_consume_token(107);
                jj_consume_token(IDENTIFIER);
              }

            break;

        default:
            jj_la1[50] = jj_gen;
            ;
          }

        InterfaceMembers();
      }

    final public void InterfaceMembers() throws ParseException
      {
        jj_consume_token(109);
label_15: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case FUNCTION:
            case PUBLIC:
            case ABSTRACT:
            case CONST:
            case DOLLAR:
                ;

                break;

            default:
                jj_la1[51] = jj_gen;

                break label_15;
              }

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case PUBLIC:
                jj_consume_token(PUBLIC);

                break;

            default:
                jj_la1[52] = jj_gen;
                ;
              }

            InterfaceMember();
            EndOfStatement();
          }

        jj_consume_token(110);
      }

    final public void InterfaceMember() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case FUNCTION:
        case ABSTRACT:

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case ABSTRACT:
                jj_consume_token(ABSTRACT);

                break;

            default:
                jj_la1[53] = jj_gen;
                ;
              }

            jj_consume_token(FUNCTION);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 112:
                jj_consume_token(112);

                break;

            default:
                jj_la1[54] = jj_gen;
                ;
              }

            jj_consume_token(IDENTIFIER);
            jj_consume_token(105);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case DOLLAR:
            case IDENTIFIER:
            case 112:
                ParameterList();

                break;

            default:
                jj_la1[55] = jj_gen;
                ;
              }

            jj_consume_token(106);

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 109:
                jj_consume_token(109);
                jj_consume_token(110);

                break;

            default:
                jj_la1[56] = jj_gen;
                ;
              }

            break;

        case DOLLAR:
            jj_consume_token(DOLLAR);
            jj_consume_token(VAR_NAME);
label_16: 
            while (true)
              {
                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 107:
                    ;

                    break;

                default:
                    jj_la1[57] = jj_gen;

                    break label_16;
                  }

                jj_consume_token(107);
                jj_consume_token(DOLLAR);
                jj_consume_token(VAR_NAME);
              }

            break;

        case CONST:
            jj_consume_token(CONST);
            jj_consume_token(IDENTIFIER);
            jj_consume_token(113);
            Expression();

            break;

        default:
            jj_la1[58] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void IncludeStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case 114:
            jj_consume_token(114);

            break;

        default:
            jj_la1[59] = jj_gen;
            ;
          }

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case INCLUDE:
            jj_consume_token(INCLUDE);

            break;

        case INCLUDE_ONCE:
            jj_consume_token(INCLUDE_ONCE);

            break;

        case REQUIRE:
            jj_consume_token(REQUIRE);

            break;

        case REQUIRE_ONCE:
            jj_consume_token(REQUIRE_ONCE);

            break;

        default:
            jj_la1[60] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }

        if (jj_2_10(2))
          {
            jj_consume_token(105);
            Expression();
            jj_consume_token(106);
          }
        else
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 105:
            case 112:
            case 114:
            case 142:
            case 147:
            case 148:
            case 149:
            case 150:
                Expression();

                break;

            default:
                jj_la1[61] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }

        EndOfStatement();
      }

    final public void EchoStatement() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case ECHO:
            jj_consume_token(ECHO);

            break;

        case PRINT:
            jj_consume_token(PRINT);

            break;

        default:
            jj_la1[62] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }

        ArgumentExpressionList();
        EndOfStatement();
      }

    final public void Expression() throws ParseException
      {
        LogicalTextOrExpression();
      }

    final public void LogicalTextOrExpression() throws ParseException
      {
        LogicalTextXorExpression();

        if (jj_2_11(2))
          {
            jj_consume_token(OR);
            LogicalTextOrExpression();
          }
        else
          {
            ;
          }
      }

    final public void LogicalTextXorExpression() throws ParseException
      {
        LogicalTextAndExpression();

        if (jj_2_12(2))
          {
            jj_consume_token(XOR);
            LogicalTextXorExpression();
          }
        else
          {
            ;
          }
      }

    final public void LogicalTextAndExpression() throws ParseException
      {
        AssignmentExpression();

        if (jj_2_13(2))
          {
            jj_consume_token(AND);
            LogicalTextAndExpression();
          }
        else
          {
            ;
          }
      }

    final public void AssignmentExpression() throws ParseException
      {
        ConditionalExpression();

        if (jj_2_14(2))
          {
            AssignmentOperator();
            Expression();
          }
        else
          {
            ;
          }
      }

    final public void AssignmentOperator() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case 113:
            jj_consume_token(113);

            break;

        case 115:
            jj_consume_token(115);

            break;

        case 116:
            jj_consume_token(116);

            break;

        case 117:
            jj_consume_token(117);

            break;

        case 118:
            jj_consume_token(118);

            break;

        case 119:
            jj_consume_token(119);

            break;

        case 120:
            jj_consume_token(120);

            break;

        case 121:
            jj_consume_token(121);

            break;

        case 122:
            jj_consume_token(122);

            break;

        case 123:
            jj_consume_token(123);

            break;

        case 124:
            jj_consume_token(124);

            break;

        case 125:
            jj_consume_token(125);

            break;

        default:
            jj_la1[63] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void ConditionalExpression() throws ParseException
      {
        Logical_Or_Expression();

        if (jj_2_15(2))
          {
            jj_consume_token(126);
            Expression();
            jj_consume_token(108);
            Expression();
          }
        else
          {
            ;
          }
      }

    final public void Logical_Or_Expression() throws ParseException
      {
        Logical_And_Expression();

        if (jj_2_16(2))
          {
            jj_consume_token(127);
            Logical_Or_Expression();
          }
        else
          {
            ;
          }
      }

    final public void Logical_And_Expression() throws ParseException
      {
        BitwiseOrExpression();

        if (jj_2_17(2))
          {
            jj_consume_token(128);
            Logical_And_Expression();
          }
        else
          {
            ;
          }
      }

    final public void BitwiseOrExpression() throws ParseException
      {
        BitwiseXorExpression();

        if (jj_2_18(2))
          {
            jj_consume_token(129);
            BitwiseOrExpression();
          }
        else
          {
            ;
          }
      }

    final public void BitwiseXorExpression() throws ParseException
      {
        BitwiseAndExpression();

        if (jj_2_19(2))
          {
            jj_consume_token(130);
            BitwiseXorExpression();
          }
        else
          {
            ;
          }
      }

    final public void BitwiseAndExpression() throws ParseException
      {
        EqualityExpression();

        if (jj_2_20(2))
          {
            jj_consume_token(112);
            BitwiseAndExpression();
          }
        else
          {
            ;
          }
      }

    final public void EqualityExpression() throws ParseException
      {
        RelationalExpression();

        if (jj_2_21(2))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 131:
                jj_consume_token(131);

                break;

            case 132:
                jj_consume_token(132);

                break;

            case 133:
                jj_consume_token(133);

                break;

            case 134:
                jj_consume_token(134);

                break;

            default:
                jj_la1[64] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }

            EqualityExpression();
          }
        else
          {
            ;
          }
      }

    final public void RelationalExpression() throws ParseException
      {
        ShiftExpression();

        if (jj_2_22(2))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 135:
                jj_consume_token(135);

                break;

            case 136:
                jj_consume_token(136);

                break;

            case 137:
                jj_consume_token(137);

                break;

            case 138:
                jj_consume_token(138);

                break;

            default:
                jj_la1[65] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }

            RelationalExpression();
          }
        else
          {
            ;
          }
      }

    final public void ShiftExpression() throws ParseException
      {
        AdditiveExpression();

        if (jj_2_23(2))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 139:
                jj_consume_token(139);

                break;

            case 140:
                jj_consume_token(140);

                break;

            default:
                jj_la1[66] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }

            ShiftExpression();
          }
        else
          {
            ;
          }
      }

    final public void AdditiveExpression() throws ParseException
      {
        MultiplicativeExpression();

        if (jj_2_24(2))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 141:
                jj_consume_token(141);

                break;

            case 142:
                jj_consume_token(142);

                break;

            case 143:
                jj_consume_token(143);

                break;

            default:
                jj_la1[67] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }

            AdditiveExpression();
          }
        else
          {
            ;
          }
      }

    final public void MultiplicativeExpression() throws ParseException
      {
        CastExpression();

        if (jj_2_25(2))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 144:
                jj_consume_token(144);

                break;

            case 145:
                jj_consume_token(145);

                break;

            case 146:
                jj_consume_token(146);

                break;

            default:
                jj_la1[68] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }

            MultiplicativeExpression();
          }
        else
          {
            ;
          }
      }

    final public void CastExpression() throws ParseException
      {
        if (jj_2_26(2147483647))
          {
            jj_consume_token(105);
            jj_consume_token(VARTYPE);
            jj_consume_token(106);
          }
        else
          {
            ;
          }

        UnaryExpression();
      }

    final public void UnaryExpression() throws ParseException
      {
label_17: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 112:
            case 142:
            case 147:
            case 148:
                ;

                break;

            default:
                jj_la1[69] = jj_gen;

                break label_17;
              }

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 112:
                jj_consume_token(112);

                break;

            case 142:
                jj_consume_token(142);

                break;

            case 147:
                jj_consume_token(147);

                break;

            case 148:
                jj_consume_token(148);

                break;

            default:
                jj_la1[70] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }

        PrefixIncDecExpression();
      }

    final public void PrefixIncDecExpression() throws ParseException
      {
label_18: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 149:
            case 150:
                ;

                break;

            default:
                jj_la1[71] = jj_gen;

                break label_18;
              }

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 149:
                jj_consume_token(149);

                break;

            case 150:
                jj_consume_token(150);

                break;

            default:
                jj_la1[72] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }

        PostfixIncDecExpression();
      }

    final public void PostfixIncDecExpression() throws ParseException
      {
        InstanceOfExpression();
label_19: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 149:
            case 150:
                ;

                break;

            default:
                jj_la1[73] = jj_gen;

                break label_19;
              }

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 149:
                jj_consume_token(149);

                break;

            case 150:
                jj_consume_token(150);

                break;

            default:
                jj_la1[74] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }
      }

    final public void InstanceOfExpression() throws ParseException
      {
        PostfixExpression();

        if (jj_2_27(2))
          {
            jj_consume_token(INSTANCEOF);
            Expression();
          }
        else
          {
            ;
          }
      }

    final public void PostfixExpression() throws ParseException
      {
        PrimaryExpression();
label_20: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 105:
            case 109:
            case 151:
            case 152:
            case 153:
                ;

                break;

            default:
                jj_la1[75] = jj_gen;

                break label_20;
              }

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 105:
                jj_consume_token(105);
                ArgumentExpressionList();
                jj_consume_token(106);

                break;

            case 151:
                jj_consume_token(151);
                PostfixExpression();

                break;

            case 152:
                jj_consume_token(152);
                PostfixExpression();

                break;

            case 153:
                jj_consume_token(153);

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case CLONE:
                case ARRAY:
                case NEW:
                case PREDEFINED_CONSTANT:
                case DOLLAR:
                case IDENTIFIER:
                case 105:
                case 112:
                case 114:
                case 142:
                case 147:
                case 148:
                case 149:
                case 150:
                    Expression();

                    break;

                default:
                    jj_la1[76] = jj_gen;
                    ;
                  }

                jj_consume_token(154);

                break;

            case 109:
                jj_consume_token(109);
                Expression();
                jj_consume_token(110);

                break;

            default:
                jj_la1[77] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }
      }

    final public void PrimaryExpression() throws ParseException
      {
        if (jj_2_28(2))
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 114:
                jj_consume_token(114);

                break;

            default:
                jj_la1[78] = jj_gen;
                ;
              }

            Variable();
          }
        else
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case PREDEFINED_CONSTANT:
            case IDENTIFIER:
            case 114:

                switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                  {
                case 114:
                    jj_consume_token(114);

                    break;

                default:
                    jj_la1[79] = jj_gen;
                    ;
                  }

                Constant();

                break;

            case 105:
                jj_consume_token(105);
                Expression();
                jj_consume_token(106);

                break;

            case CLONE:
            case NEW:
                ClassInstantiation();

                break;

            case ARRAY:
                Array();

                break;

            default:
                jj_la1[80] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }
      }

    final public void Array() throws ParseException
      {
        jj_consume_token(ARRAY);
        jj_consume_token(105);

        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case INTEGER_LITERAL:
        case FLOATING_POINT_LITERAL:
        case DOUBLE_STRING_LITERAL_START:
        case SINGLE_STRING_LITERAL_START:
        case HEREDOC_START:
        case CLONE:
        case ARRAY:
        case NEW:
        case PREDEFINED_CONSTANT:
        case DOLLAR:
        case IDENTIFIER:
        case 105:
        case 112:
        case 114:
        case 142:
        case 147:
        case 148:
        case 149:
        case 150:
            Expression();

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 111:
                jj_consume_token(111);
                Expression();

                break;

            default:
                jj_la1[81] = jj_gen;
                ;
              }

            break;

        default:
            jj_la1[82] = jj_gen;
            ;
          }

label_21: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 107:
                ;

                break;

            default:
                jj_la1[83] = jj_gen;

                break label_21;
              }

            jj_consume_token(107);
            Expression();

            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 111:
                jj_consume_token(111);
                Expression();

                break;

            default:
                jj_la1[84] = jj_gen;
                ;
              }
          }

        jj_consume_token(106);
      }

    final public void ClassInstantiation() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case NEW:
            jj_consume_token(NEW);
            Expression();

            if (jj_2_29(3))
              {
                jj_consume_token(105);
                ArgumentExpressionList();
                jj_consume_token(106);
              }
            else
              {
                ;
              }

            break;

        case CLONE:
            jj_consume_token(CLONE);
            Variable();

            break;

        default:
            jj_la1[85] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void Variable() throws ParseException
      {
        jj_consume_token(DOLLAR);
label_22: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case DOLLAR1:
                ;

                break;

            default:
                jj_la1[86] = jj_gen;

                break label_22;
              }

            jj_consume_token(DOLLAR1);
          }

        jj_consume_token(VAR_NAME);
      }

    final public void ArgumentExpressionList() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case INTEGER_LITERAL:
        case FLOATING_POINT_LITERAL:
        case DOUBLE_STRING_LITERAL_START:
        case SINGLE_STRING_LITERAL_START:
        case HEREDOC_START:
        case CLONE:
        case ARRAY:
        case NEW:
        case PREDEFINED_CONSTANT:
        case DOLLAR:
        case IDENTIFIER:
        case 105:
        case 112:
        case 114:
        case 142:
        case 147:
        case 148:
        case 149:
        case 150:
            Expression();

            break;

        default:
            jj_la1[87] = jj_gen;
            ;
          }

label_23: 
        while (true)
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case 107:
                ;

                break;

            default:
                jj_la1[88] = jj_gen;

                break label_23;
              }

            jj_consume_token(107);
            Expression();
          }
      }

    final public void Constant() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case INTEGER_LITERAL:
            jj_consume_token(INTEGER_LITERAL);

            break;

        case FLOATING_POINT_LITERAL:
            jj_consume_token(FLOATING_POINT_LITERAL);

            break;

        case DOUBLE_STRING_LITERAL_START:
        case SINGLE_STRING_LITERAL_START:
        case HEREDOC_START:
            String();

            break;

        case PREDEFINED_CONSTANT:
            jj_consume_token(PREDEFINED_CONSTANT);

            break;

        case IDENTIFIER:
            jj_consume_token(IDENTIFIER);

            break;

        default:
            jj_la1[89] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void String() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case DOUBLE_STRING_LITERAL_START:
            DoubleStringLiteral();

            break;

        case SINGLE_STRING_LITERAL_START:
            jj_consume_token(SINGLE_STRING_LITERAL_START);
            jj_consume_token(SINGLE_STRING_LITERAL_END);

            break;

        case HEREDOC_START:
            jj_consume_token(HEREDOC_START);

            break;

        default:
            jj_la1[90] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final public void DoubleStringLiteral() throws ParseException
      {
        jj_consume_token(DOUBLE_STRING_LITERAL_START);

        if (jj_2_30(2))
          {
            jj_consume_token(DSL_SIMPLE_VAR_START);
            jj_consume_token(DSL_SIMPLE_STRING_VAR_END);
          }
        else
          {
            switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
              {
            case DOUBLE_STRING_LITERAL_END:
            case DSL_SIMPLE_VAR_START:
            case DSL_COMPLEX_VAR_START:
label_24: 
                while (true)
                  {
                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case DSL_SIMPLE_VAR_START:
                    case DSL_COMPLEX_VAR_START:
                        ;

                        break;

                    default:
                        jj_la1[91] = jj_gen;

                        break label_24;
                      }

                    switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                      {
                    case DSL_SIMPLE_VAR_START:
                        jj_consume_token(DSL_SIMPLE_VAR_START);

                        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
                          {
                        case DSL_SIMPLE_VAR_END:
                            jj_consume_token(DSL_SIMPLE_VAR_END);

                            break;

                        case DSL_SIMPLE_VAR_WASNT:
                            jj_consume_token(DSL_SIMPLE_VAR_WASNT);

                            break;

                        default:
                            jj_la1[92] = jj_gen;
                            jj_consume_token(-1);
                            throw new ParseException();
                          }

                        break;

                    case DSL_COMPLEX_VAR_START:
                        jj_consume_token(DSL_COMPLEX_VAR_START);
                        jj_consume_token(DSL_COMPLEX_VAR_END);

                        break;

                    default:
                        jj_la1[93] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                      }
                  }

                jj_consume_token(DOUBLE_STRING_LITERAL_END);

                break;

            default:
                jj_la1[94] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
          }
      }

    final public void Visibility() throws ParseException
      {
        switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk)
          {
        case PUBLIC:
            jj_consume_token(PUBLIC);

            break;

        case PRIVATE:
            jj_consume_token(PRIVATE);

            break;

        case PROTECTED:
            jj_consume_token(PROTECTED);

            break;

        default:
            jj_la1[95] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
      }

    final private boolean jj_2_1(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_1();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(0, xla);
          }
      }

    final private boolean jj_2_2(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_2();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(1, xla);
          }
      }

    final private boolean jj_2_3(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_3();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(2, xla);
          }
      }

    final private boolean jj_2_4(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_4();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(3, xla);
          }
      }

    final private boolean jj_2_5(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_5();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(4, xla);
          }
      }

    final private boolean jj_2_6(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_6();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(5, xla);
          }
      }

    final private boolean jj_2_7(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_7();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(6, xla);
          }
      }

    final private boolean jj_2_8(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_8();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(7, xla);
          }
      }

    final private boolean jj_2_9(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_9();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(8, xla);
          }
      }

    final private boolean jj_2_10(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_10();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(9, xla);
          }
      }

    final private boolean jj_2_11(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_11();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(10, xla);
          }
      }

    final private boolean jj_2_12(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_12();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(11, xla);
          }
      }

    final private boolean jj_2_13(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_13();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(12, xla);
          }
      }

    final private boolean jj_2_14(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_14();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(13, xla);
          }
      }

    final private boolean jj_2_15(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_15();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(14, xla);
          }
      }

    final private boolean jj_2_16(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_16();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(15, xla);
          }
      }

    final private boolean jj_2_17(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_17();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(16, xla);
          }
      }

    final private boolean jj_2_18(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_18();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(17, xla);
          }
      }

    final private boolean jj_2_19(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_19();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(18, xla);
          }
      }

    final private boolean jj_2_20(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_20();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(19, xla);
          }
      }

    final private boolean jj_2_21(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_21();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(20, xla);
          }
      }

    final private boolean jj_2_22(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_22();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(21, xla);
          }
      }

    final private boolean jj_2_23(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_23();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(22, xla);
          }
      }

    final private boolean jj_2_24(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_24();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(23, xla);
          }
      }

    final private boolean jj_2_25(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_25();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(24, xla);
          }
      }

    final private boolean jj_2_26(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_26();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(25, xla);
          }
      }

    final private boolean jj_2_27(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_27();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(26, xla);
          }
      }

    final private boolean jj_2_28(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_28();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(27, xla);
          }
      }

    final private boolean jj_2_29(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_29();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(28, xla);
          }
      }

    final private boolean jj_2_30(int xla)
      {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;

        try
          {
            return !jj_3_30();
          }
        catch (LookaheadSuccess ls)
          {
            return true;
          }
        finally
          {
            jj_save(29, xla);
          }
      }

    final private boolean jj_3_7()
      {
        if (jj_scan_token(107))
          {
            return true;
          }

        if (jj_3R_30())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_52()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(79))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(80))
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_26()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_52())
          {
            jj_scanpos = xsp;
          }

        if (jj_scan_token(CLASS))
          {
            return true;
          }

        if (jj_scan_token(IDENTIFIER))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_30()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(102))
          {
            jj_scanpos = xsp;
          }

        xsp = jj_scanpos;

        if (jj_scan_token(112))
          {
            jj_scanpos = xsp;
          }

        if (jj_3R_48())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_94()
      {
        if (jj_scan_token(RETURN))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_93()
      {
        if (jj_scan_token(BREAK))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_75()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_92())
          {
            jj_scanpos = xsp;

            if (jj_3R_93())
              {
                jj_scanpos = xsp;

                if (jj_3R_94())
                  {
                    return true;
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_92()
      {
        if (jj_scan_token(CONTINUE))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_91()
      {
        if (jj_scan_token(FOREACH))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_90()
      {
        if (jj_scan_token(FOR))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_89()
      {
        if (jj_scan_token(DO))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_74()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_88())
          {
            jj_scanpos = xsp;

            if (jj_3R_89())
              {
                jj_scanpos = xsp;

                if (jj_3R_90())
                  {
                    jj_scanpos = xsp;

                    if (jj_3R_91())
                      {
                        return true;
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_88()
      {
        if (jj_scan_token(WHILE))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_87()
      {
        if (jj_scan_token(SWITCH))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_73()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_86())
          {
            jj_scanpos = xsp;

            if (jj_3R_87())
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_86()
      {
        if (jj_scan_token(IF))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_72()
      {
        if (jj_scan_token(109))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_28()
      {
        if (jj_3R_33())
          {
            return true;
          }

        if (jj_3R_53())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_51()
      {
        if (jj_scan_token(DFLT))
          {
            return true;
          }

        if (jj_scan_token(108))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_50()
      {
        if (jj_scan_token(CASE))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_25()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_50())
          {
            jj_scanpos = xsp;

            if (jj_3R_51())
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_78()
      {
        if (jj_scan_token(DEFINE))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_71()
      {
        if (jj_3R_85())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_85()
      {
        if (jj_scan_token(PHP_END))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_53()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(93))
          {
            jj_scanpos = xsp;

            if (jj_3R_71())
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_81()
      {
        if (jj_scan_token(TRY))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_80()
      {
        if (jj_scan_token(THROW))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_64()
      {
        if (jj_3R_53())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_63()
      {
        if (jj_3R_81())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_62()
      {
        if (jj_3R_80())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_61()
      {
        if (jj_3R_79())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_60()
      {
        if (jj_3R_78())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_59()
      {
        if (jj_3R_77())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_58()
      {
        if (jj_3R_76())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_57()
      {
        if (jj_3R_75())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_56()
      {
        if (jj_3R_74())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_55()
      {
        if (jj_3R_73())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_54()
      {
        if (jj_3R_72())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_4()
      {
        if (jj_3R_28())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_3()
      {
        if (jj_3R_27())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_2()
      {
        if (jj_3R_26())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_1()
      {
        if (jj_3R_25())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_29()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_1())
          {
            jj_scanpos = xsp;

            if (jj_3_2())
              {
                jj_scanpos = xsp;

                if (jj_3_3())
                  {
                    jj_scanpos = xsp;

                    if (jj_3_4())
                      {
                        jj_scanpos = xsp;

                        if (jj_3R_54())
                          {
                            jj_scanpos = xsp;

                            if (jj_3R_55())
                              {
                                jj_scanpos = xsp;

                                if (jj_3R_56())
                                  {
                                    jj_scanpos = xsp;

                                    if (jj_3R_57())
                                      {
                                        jj_scanpos = xsp;

                                        if (jj_3R_58())
                                          {
                                            jj_scanpos = xsp;

                                            if (jj_3R_59())
                                              {
                                                jj_scanpos = xsp;

                                                if (jj_3R_60())
                                                  {
                                                    jj_scanpos = xsp;

                                                    if (jj_3R_61())
                                                      {
                                                        jj_scanpos = xsp;

                                                        if (jj_3R_62())
                                                          {
                                                            jj_scanpos = xsp;

                                                            if (jj_3R_63())
                                                              {
                                                                jj_scanpos = xsp;

                                                                if (jj_3R_64())
                                                                  {
                                                                    return true;
                                                                  }
                                                              }
                                                          }
                                                      }
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_119()
      {
        if (jj_3R_122())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_136()
      {
        if (jj_scan_token(DSL_COMPLEX_VAR_START))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_135()
      {
        if (jj_scan_token(DSL_SIMPLE_VAR_START))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_134()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_135())
          {
            jj_scanpos = xsp;

            if (jj_3R_136())
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_66()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(76))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(77))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(78))
                  {
                    return true;
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_133()
      {
        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_134())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_scan_token(DOUBLE_STRING_LITERAL_END))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_30()
      {
        if (jj_scan_token(DSL_SIMPLE_VAR_START))
          {
            return true;
          }

        if (jj_scan_token(DSL_SIMPLE_STRING_VAR_END))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_70()
      {
        if (jj_scan_token(107))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_125()
      {
        if (jj_scan_token(DOUBLE_STRING_LITERAL_START))
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_30())
          {
            jj_scanpos = xsp;

            if (jj_3R_133())
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_124()
      {
        if (jj_scan_token(SINGLE_STRING_LITERAL_START))
          {
            return true;
          }

        if (jj_scan_token(SINGLE_STRING_LITERAL_END))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_122()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_123())
          {
            jj_scanpos = xsp;

            if (jj_3R_124())
              {
                jj_scanpos = xsp;

                if (jj_scan_token(17))
                  {
                    return true;
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_123()
      {
        if (jj_3R_125())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_132()
      {
        if (jj_scan_token(109))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_29()
      {
        if (jj_scan_token(105))
          {
            return true;
          }

        if (jj_3R_49())
          {
            return true;
          }

        if (jj_scan_token(106))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_131()
      {
        if (jj_scan_token(153))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_130()
      {
        if (jj_scan_token(152))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_116()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(9))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(13))
              {
                jj_scanpos = xsp;

                if (jj_3R_119())
                  {
                    jj_scanpos = xsp;

                    if (jj_scan_token(90))
                      {
                        jj_scanpos = xsp;

                        if (jj_scan_token(102))
                          {
                            return true;
                          }
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_69()
      {
        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_49()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_69())
          {
            jj_scanpos = xsp;
          }

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_70())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        return false;
      }

    final private boolean jj_3R_129()
      {
        if (jj_scan_token(151))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_48()
      {
        if (jj_scan_token(DOLLAR))
          {
            return true;
          }

        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_scan_token(100))
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_scan_token(VAR_NAME))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_121()
      {
        if (jj_scan_token(CLONE))
          {
            return true;
          }

        if (jj_3R_48())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_117()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_120())
          {
            jj_scanpos = xsp;

            if (jj_3R_121())
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_120()
      {
        if (jj_scan_token(NEW))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_118()
      {
        if (jj_scan_token(ARRAY))
          {
            return true;
          }

        if (jj_scan_token(105))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_115()
      {
        if (jj_3R_118())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_114()
      {
        if (jj_3R_117())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_113()
      {
        if (jj_scan_token(105))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_127()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_128())
          {
            jj_scanpos = xsp;

            if (jj_3R_129())
              {
                jj_scanpos = xsp;

                if (jj_3R_130())
                  {
                    jj_scanpos = xsp;

                    if (jj_3R_131())
                      {
                        jj_scanpos = xsp;

                        if (jj_3R_132())
                          {
                            return true;
                          }
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_128()
      {
        if (jj_scan_token(105))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_112()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(114))
          {
            jj_scanpos = xsp;
          }

        if (jj_3R_116())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_28()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(114))
          {
            jj_scanpos = xsp;
          }

        if (jj_3R_48())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_111()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_28())
          {
            jj_scanpos = xsp;

            if (jj_3R_112())
              {
                jj_scanpos = xsp;

                if (jj_3R_113())
                  {
                    jj_scanpos = xsp;

                    if (jj_3R_114())
                      {
                        jj_scanpos = xsp;

                        if (jj_3R_115())
                          {
                            return true;
                          }
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3_27()
      {
        if (jj_scan_token(INSTANCEOF))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_126()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(149))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(150))
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_110()
      {
        if (jj_3R_111())
          {
            return true;
          }

        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_127())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        return false;
      }

    final private boolean jj_3R_109()
      {
        if (jj_3R_110())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_27())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_24()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(141))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(142))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(143))
                  {
                    return true;
                  }
              }
          }

        if (jj_3R_46())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_106()
      {
        if (jj_3R_109())
          {
            return true;
          }

        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_126())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        return false;
      }

    final private boolean jj_3_25()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(144))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(145))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(146))
                  {
                    return true;
                  }
              }
          }

        if (jj_3R_47())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_26()
      {
        if (jj_scan_token(105))
          {
            return true;
          }

        if (jj_scan_token(VARTYPE))
          {
            return true;
          }

        if (jj_scan_token(106))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_105()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(149))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(150))
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_101()
      {
        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_105())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_3R_106())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_23()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(139))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(140))
              {
                return true;
              }
          }

        if (jj_3R_45())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_100()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(112))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(142))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(147))
                  {
                    jj_scanpos = xsp;

                    if (jj_scan_token(148))
                      {
                        return true;
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_84()
      {
        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_100())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_3R_101())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_83()
      {
        if (jj_scan_token(105))
          {
            return true;
          }

        if (jj_scan_token(VARTYPE))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_68()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_83())
          {
            jj_scanpos = xsp;
          }

        if (jj_3R_84())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_21()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(131))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(132))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(133))
                  {
                    jj_scanpos = xsp;

                    if (jj_scan_token(134))
                      {
                        return true;
                      }
                  }
              }
          }

        if (jj_3R_43())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_22()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(135))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(136))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(137))
                  {
                    jj_scanpos = xsp;

                    if (jj_scan_token(138))
                      {
                        return true;
                      }
                  }
              }
          }

        if (jj_3R_44())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_47()
      {
        if (jj_3R_68())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_25())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_20()
      {
        if (jj_scan_token(112))
          {
            return true;
          }

        if (jj_3R_42())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_46()
      {
        if (jj_3R_47())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_24())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_19()
      {
        if (jj_scan_token(130))
          {
            return true;
          }

        if (jj_3R_41())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_45()
      {
        if (jj_3R_46())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_23())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_18()
      {
        if (jj_scan_token(129))
          {
            return true;
          }

        if (jj_3R_40())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_44()
      {
        if (jj_3R_45())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_22())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_17()
      {
        if (jj_scan_token(128))
          {
            return true;
          }

        if (jj_3R_39())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_16()
      {
        if (jj_scan_token(127))
          {
            return true;
          }

        if (jj_3R_38())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_43()
      {
        if (jj_3R_44())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_21())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_42()
      {
        if (jj_3R_43())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_20())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_10()
      {
        if (jj_scan_token(105))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_15()
      {
        if (jj_scan_token(126))
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_41()
      {
        if (jj_3R_42())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_19())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_40()
      {
        if (jj_3R_41())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_18())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_14()
      {
        if (jj_3R_37())
          {
            return true;
          }

        if (jj_3R_33())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_39()
      {
        if (jj_3R_40())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_17())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3_13()
      {
        if (jj_scan_token(AND))
          {
            return true;
          }

        if (jj_3R_36())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_12()
      {
        if (jj_scan_token(XOR))
          {
            return true;
          }

        if (jj_3R_35())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_38()
      {
        if (jj_3R_39())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_16())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_107()
      {
        if (jj_3R_66())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_11()
      {
        if (jj_scan_token(OR))
          {
            return true;
          }

        if (jj_3R_34())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_82()
      {
        if (jj_3R_38())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_15())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_37()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(113))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(115))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(116))
                  {
                    jj_scanpos = xsp;

                    if (jj_scan_token(117))
                      {
                        jj_scanpos = xsp;

                        if (jj_scan_token(118))
                          {
                            jj_scanpos = xsp;

                            if (jj_scan_token(119))
                              {
                                jj_scanpos = xsp;

                                if (jj_scan_token(120))
                                  {
                                    jj_scanpos = xsp;

                                    if (jj_scan_token(121))
                                      {
                                        jj_scanpos = xsp;

                                        if (jj_scan_token(122))
                                          {
                                            jj_scanpos = xsp;

                                            if (jj_scan_token(123))
                                              {
                                                jj_scanpos = xsp;

                                                if (jj_scan_token(124))
                                                  {
                                                    jj_scanpos = xsp;

                                                    if (jj_scan_token(125))
                                                      {
                                                        return true;
                                                      }
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_102()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(80))
          {
            jj_scanpos = xsp;

            if (jj_3R_107())
              {
                jj_scanpos = xsp;

                if (jj_scan_token(81))
                  {
                    return true;
                  }
              }
          }

        return false;
      }

    final private boolean jj_3_6()
      {
        if (jj_scan_token(ELSE))
          {
            return true;
          }

        if (jj_3R_29())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_67()
      {
        if (jj_3R_82())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_14())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_36()
      {
        if (jj_3R_67())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_13())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_35()
      {
        if (jj_3R_36())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_12())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_34()
      {
        if (jj_3R_35())
          {
            return true;
          }

        Token xsp;
        xsp = jj_scanpos;

        if (jj_3_11())
          {
            jj_scanpos = xsp;
          }

        return false;
      }

    final private boolean jj_3R_33()
      {
        if (jj_3R_34())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_103()
      {
        if (jj_3R_66())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_77()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(52))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(53))
              {
                return true;
              }
          }

        return false;
      }

    final private boolean jj_3R_76()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(114))
          {
            jj_scanpos = xsp;
          }

        xsp = jj_scanpos;

        if (jj_scan_token(50))
          {
            jj_scanpos = xsp;

            if (jj_scan_token(49))
              {
                jj_scanpos = xsp;

                if (jj_scan_token(48))
                  {
                    jj_scanpos = xsp;

                    if (jj_scan_token(47))
                      {
                        return true;
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_65()
      {
        if (jj_3R_66())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_32()
      {
        if (jj_3R_66())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_31()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(80))
          {
            jj_scanpos = xsp;

            if (jj_3R_65())
              {
                jj_scanpos = xsp;

                if (jj_scan_token(81))
                  {
                    return true;
                  }
              }
          }

        return false;
      }

    final private boolean jj_3_9()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_32())
          {
            jj_scanpos = xsp;
          }

        if (jj_scan_token(CONST))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_8()
      {
        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_31())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_scan_token(FUNCTION))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_108()
      {
        if (jj_3R_66())
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_27()
      {
        if (jj_scan_token(INTERFACE))
          {
            return true;
          }

        if (jj_scan_token(IDENTIFIER))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_99()
      {
        if (jj_scan_token(ABSTRACT))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_98()
      {
        if (jj_scan_token(GLOBAL))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_104()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_scan_token(75))
          {
            jj_scanpos = xsp;

            if (jj_3R_108())
              {
                jj_scanpos = xsp;

                if (jj_scan_token(81))
                  {
                    return true;
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_97()
      {
        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_104())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_scan_token(DOLLAR))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_96()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_103())
          {
            jj_scanpos = xsp;
          }

        if (jj_scan_token(CONST))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3R_79()
      {
        Token xsp;
        xsp = jj_scanpos;

        if (jj_3R_95())
          {
            jj_scanpos = xsp;

            if (jj_3R_96())
              {
                jj_scanpos = xsp;

                if (jj_3R_97())
                  {
                    jj_scanpos = xsp;

                    if (jj_3R_98())
                      {
                        jj_scanpos = xsp;

                        if (jj_3R_99())
                          {
                            return true;
                          }
                      }
                  }
              }
          }

        return false;
      }

    final private boolean jj_3R_95()
      {
        Token xsp;

        while (true)
          {
            xsp = jj_scanpos;

            if (jj_3R_102())
              {
                jj_scanpos = xsp;

                break;
              }
          }

        if (jj_scan_token(FUNCTION))
          {
            return true;
          }

        return false;
      }

    final private boolean jj_3_5()
      {
        if (jj_scan_token(ELSEIF))
          {
            return true;
          }

        if (jj_scan_token(105))
          {
            return true;
          }

        return false;
      }

    private static void jj_la1_0()
      {
        jj_la1_0 = new int[]
            {
                0x1c, 0x3a200, 0x3, 0x1c, 0x0, 0x0, 0x0, 0x18, 0x18, 0x3, 0x0,
                0x3a200, 0x0, 0x3a200, 0x3a200, 0x3a200, 0x3a200, 0x0, 0x0, 0x0,
                0x200, 0x200, 0x3a200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x3a200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a200, 0x0, 0x0, 0x0,
                0x3a200, 0x0, 0x3a200, 0x0, 0x0, 0x0, 0x0, 0x3a200, 0x0, 0x3a200,
                0x38000, 0x18000000, 0x0, 0x18000000, 0x1c000000, 0x0,
            };
      }

    private static void jj_la1_1()
      {
        jj_la1_1 = new int[]
            {
                0x0, 0xbfff8000, 0x0, 0x0, 0xbe7f8000, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x1800000, 0xbfff8000, 0x400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0xb8000000, 0x0, 0x0, 0x0, 0x6000000, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x78000, 0x0, 0x300000, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0xa, 0x0, 0x0, 0x0,
            };
      }

    private static void jj_la1_2()
      {
        jj_la1_2 = new int[]
            {
                0x0, 0x7fb7fb03, 0x0, 0x0, 0x7893f903, 0x80000000, 0x28000000,
                0x0, 0x0, 0x0, 0x0, 0x7fb7fb03, 0x2, 0x17200000, 0x17200000,
                0x17200000, 0x17200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x17200000, 0x1,
                0x0, 0x0, 0x0, 0x18000, 0x18000, 0x400, 0x0, 0x80000, 0x1093f900,
                0x37000, 0x37000, 0x0, 0x10000000, 0x7000, 0x27800, 0x27800, 0x0,
                0x0, 0x0, 0x0, 0x7000, 0x20000, 0x0, 0x10000000, 0x1082f800, 0x0,
                0x400, 0x10109100, 0x1000, 0x8000, 0x0, 0x10000000, 0x0, 0x0,
                0x10108100, 0x0, 0x0, 0x17200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x17200000, 0x0, 0x0,
                0x0, 0x7200000, 0x0, 0x17200000, 0x0, 0x0, 0x2200000, 0x0,
                0x17200000, 0x0, 0x4000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7000,
            };
      }

    private static void jj_la1_3()
      {
        jj_la1_3 = new int[]
            {
                0x0, 0x52241, 0x0, 0x0, 0x42001, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x52241, 0x0, 0x50240, 0x50240, 0x50240, 0x50240, 0x10000,
                0x8000, 0x0, 0x0, 0x0, 0x50240, 0x0, 0x40, 0x10000, 0x20000, 0x0,
                0x0, 0x0, 0x800, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x10040, 0x0, 0x0,
                0x0, 0x20000, 0x800, 0x20000, 0x800, 0x0, 0x0, 0x10000, 0x10040,
                0x0, 0x800, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x10040, 0x2000, 0x800,
                0x0, 0x40000, 0x0, 0x50240, 0x0, 0x3ffa0000, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x10000, 0x10000, 0x0, 0x0, 0x0, 0x0, 0x2200, 0x50240,
                0x2200, 0x40000, 0x40000, 0x40240, 0x8000, 0x50240, 0x800,
                0x8000, 0x0, 0x10, 0x50240, 0x800, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0,
            };
      }

    private static void jj_la1_4()
      {
        jj_la1_4 = new int[]
            {
                0x0, 0x784000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x784000, 0x0, 0x784000, 0x784000, 0x784000, 0x784000, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x784000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x784000, 0x0, 0x0, 0x78, 0x780, 0x1800,
                0xe000, 0x70000, 0x184000, 0x184000, 0x600000, 0x600000,
                0x600000, 0x600000, 0x3800000, 0x784000, 0x3800000, 0x0, 0x0,
                0x0, 0x0, 0x784000, 0x0, 0x0, 0x0, 0x0, 0x784000, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x0, 0x0,
            };
      }

    public void ReInit(CharStream stream)
      {
        token_source.ReInit(stream);
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;

        for (int i = 0; i < 96; i++)
            jj_la1[i] = -1;

        for (int i = 0; i < jj_2_rtns.length; i++)
            jj_2_rtns[i] = new JJCalls();
      }

    public void ReInit(PHPParserTokenManager tm)
      {
        token_source = tm;
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;

        for (int i = 0; i < 96; i++)
            jj_la1[i] = -1;

        for (int i = 0; i < jj_2_rtns.length; i++)
            jj_2_rtns[i] = new JJCalls();
      }

    final private Token jj_consume_token(int kind) throws ParseException
      {
        Token oldToken;

        if ((oldToken = token).next != null)
          {
            token = token.next;
          }
        else
        {
            token = token.next = token_source.getNextToken();
          }

        jj_ntk = -1;

        if (token.kind == kind)
          {
            jj_gen++;

            if (++jj_gc > 100)
              {
                jj_gc = 0;

                for (int i = 0; i < jj_2_rtns.length; i++)
                  {
                    JJCalls c = jj_2_rtns[i];

                    while (c != null)
                      {
                        if (c.gen < jj_gen)
                          {
                            c.first = null;
                          }

                        c = c.next;
                      }
                  }
              }

            return token;
          }

        token = oldToken;
        jj_kind = kind;
        throw generateParseException();
      }

    final private boolean jj_scan_token(int kind)
      {
        if (jj_scanpos == jj_lastpos)
          {
            jj_la--;

            if (jj_scanpos.next == null)
              {
                jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
              }
            else
              {
                jj_lastpos = jj_scanpos = jj_scanpos.next;
              }
          }
        else
          {
            jj_scanpos = jj_scanpos.next;
          }

        if (jj_rescan)
          {
            int i = 0;
            Token tok = token;

            while ((tok != null) && (tok != jj_scanpos))
              {
                i++;
                tok = tok.next;
              }

            if (tok != null)
              {
                jj_add_error_token(kind, i);
              }
          }

        if (jj_scanpos.kind != kind)
          {
            return true;
          }

        if ((jj_la == 0) && (jj_scanpos == jj_lastpos))
          {
            throw jj_ls;
          }

        return false;
      }

    final public Token getNextToken()
      {
        if (token.next != null)
          {
            token = token.next;
          }
        else
        {
            token = token.next = token_source.getNextToken();
          }

        jj_ntk = -1;
        jj_gen++;

        return token;
      }

    final public Token getToken(int index)
      {
        Token t = lookingAhead ? jj_scanpos : token;

        for (int i = 0; i < index; i++)
          {
            if (t.next != null)
              {
                t = t.next;
              }
            else
            {
                t = t.next = token_source.getNextToken();
              }
          }

        return t;
      }

    final private int jj_ntk()
      {
        if ((jj_nt = token.next) == null)
          {
            return (jj_ntk = (token.next = token_source.getNextToken()).kind);
          }
        else
        {
            return (jj_ntk = jj_nt.kind);
          }
      }

    private void jj_add_error_token(int kind, int pos)
      {
        if (pos >= 100)
          {
            return;
          }

        if (pos == (jj_endpos + 1))
          {
            jj_lasttokens[jj_endpos++] = kind;
          }
        else if (jj_endpos != 0)
          {
            jj_expentry = new int[jj_endpos];

            for (int i = 0; i < jj_endpos; i++)
              {
                jj_expentry[i] = jj_lasttokens[i];
              }

            boolean exists = false;

            for (java.util.Enumeration e = jj_expentries.elements();
                    e.hasMoreElements();)
              {
                int[] oldentry = (int[]) (e.nextElement());

                if (oldentry.length == jj_expentry.length)
                  {
                    exists = true;

                    for (int i = 0; i < jj_expentry.length; i++)
                      {
                        if (oldentry[i] != jj_expentry[i])
                          {
                            exists = false;

                            break;
                          }
                      }

                    if (exists)
                      {
                        break;
                      }
                  }
              }

            if (!exists)
              {
                jj_expentries.addElement(jj_expentry);
              }

            if (pos != 0)
              {
                jj_lasttokens[(jj_endpos = pos) - 1] = kind;
              }
          }
      }

    public ParseException generateParseException()
      {
        jj_expentries.removeAllElements();

        boolean[] la1tokens = new boolean[155];

        for (int i = 0; i < 155; i++)
          {
            la1tokens[i] = false;
          }

        if (jj_kind >= 0)
          {
            la1tokens[jj_kind] = true;
            jj_kind = -1;
          }

        for (int i = 0; i < 96; i++)
          {
            if (jj_la1[i] == jj_gen)
              {
                for (int j = 0; j < 32; j++)
                  {
                    if ((jj_la1_0[i] & (1 << j)) != 0)
                      {
                        la1tokens[j] = true;
                      }

                    if ((jj_la1_1[i] & (1 << j)) != 0)
                      {
                        la1tokens[32 + j] = true;
                      }

                    if ((jj_la1_2[i] & (1 << j)) != 0)
                      {
                        la1tokens[64 + j] = true;
                      }

                    if ((jj_la1_3[i] & (1 << j)) != 0)
                      {
                        la1tokens[96 + j] = true;
                      }

                    if ((jj_la1_4[i] & (1 << j)) != 0)
                      {
                        la1tokens[128 + j] = true;
                      }
                  }
              }
          }

        for (int i = 0; i < 155; i++)
          {
            if (la1tokens[i])
              {
                jj_expentry = new int[1];
                jj_expentry[0] = i;
                jj_expentries.addElement(jj_expentry);
              }
          }

        jj_endpos = 0;
        jj_rescan_token();
        jj_add_error_token(0, 0);

        int[][] exptokseq = new int[jj_expentries.size()][];

        for (int i = 0; i < jj_expentries.size(); i++)
          {
            exptokseq[i] = (int[]) jj_expentries.elementAt(i);
          }

        return new ParseException(token, exptokseq, tokenImage);
      }

    final public void enable_tracing()
      {
      }

    final public void disable_tracing()
      {
      }

    final private void jj_rescan_token()
      {
        jj_rescan = true;

        for (int i = 0; i < 30; i++)
          {
            try
              {
                JJCalls p = jj_2_rtns[i];

                do
                  {
                    if (p.gen > jj_gen)
                      {
                        jj_la = p.arg;
                        jj_lastpos = jj_scanpos = p.first;

                        switch (i)
                          {
                        case 0:
                            jj_3_1();

                            break;

                        case 1:
                            jj_3_2();

                            break;

                        case 2:
                            jj_3_3();

                            break;

                        case 3:
                            jj_3_4();

                            break;

                        case 4:
                            jj_3_5();

                            break;

                        case 5:
                            jj_3_6();

                            break;

                        case 6:
                            jj_3_7();

                            break;

                        case 7:
                            jj_3_8();

                            break;

                        case 8:
                            jj_3_9();

                            break;

                        case 9:
                            jj_3_10();

                            break;

                        case 10:
                            jj_3_11();

                            break;

                        case 11:
                            jj_3_12();

                            break;

                        case 12:
                            jj_3_13();

                            break;

                        case 13:
                            jj_3_14();

                            break;

                        case 14:
                            jj_3_15();

                            break;

                        case 15:
                            jj_3_16();

                            break;

                        case 16:
                            jj_3_17();

                            break;

                        case 17:
                            jj_3_18();

                            break;

                        case 18:
                            jj_3_19();

                            break;

                        case 19:
                            jj_3_20();

                            break;

                        case 20:
                            jj_3_21();

                            break;

                        case 21:
                            jj_3_22();

                            break;

                        case 22:
                            jj_3_23();

                            break;

                        case 23:
                            jj_3_24();

                            break;

                        case 24:
                            jj_3_25();

                            break;

                        case 25:
                            jj_3_26();

                            break;

                        case 26:
                            jj_3_27();

                            break;

                        case 27:
                            jj_3_28();

                            break;

                        case 28:
                            jj_3_29();

                            break;

                        case 29:
                            jj_3_30();

                            break;
                          }
                      }

                    p = p.next;
                  }
                while (p != null);
              }
            catch (LookaheadSuccess ls)
              {
              }
          }

        jj_rescan = false;
      }

    final private void jj_save(int index, int xla)
      {
        JJCalls p = jj_2_rtns[index];

        while (p.gen > jj_gen)
          {
            if (p.next == null)
              {
                p = p.next = new JJCalls();

                break;
              }

            p = p.next;
          }

        p.gen = (jj_gen + xla) - jj_la;
        p.first = token;
        p.arg = xla;
      }

    static private final class LookaheadSuccess extends java.lang.Error
      {
      }

    static final class JJCalls
      {
        int gen;
        Token first;
        int arg;
        JJCalls next;
      }
  }
