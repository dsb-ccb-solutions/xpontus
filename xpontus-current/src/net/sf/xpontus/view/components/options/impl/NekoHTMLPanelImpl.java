/*
 * NekoHTMLPanel.java
 *
 * Created on February 16, 2006, 8:00 PM
 */

package net.sf.xpontus.view.components.options.impl;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JComponent;

import net.sf.xpontus.model.options.NekoHTMLOptionModel;
import net.sf.xpontus.view.components.options.IOptionPanel;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.adapter.ComboBoxAdapter;
import com.jgoodies.binding.beans.BeanAdapter;
import com.jgoodies.binding.value.ValueModel;

/**
 *
 * @author  Yves Zoundi
 */
public class NekoHTMLPanelImpl extends javax.swing.JPanel implements IOptionPanel{
    private BeanAdapter adapter;
    private ComboBoxAdapter doctypeModel, lowerElemsModel,   lowerAttrsModel;
    
    /**
     * Creates new form NekoHTMLPanel
     */
    public NekoHTMLPanelImpl() {
        model = new NekoHTMLOptionModel();
        initModel();
        initComponents();
        read();
    }
    
    public JComponent getControl() {
        return this;
    }
    
    public String getDisplayName() {
        return "HTML Cleaner";
    }
    
    public void read(){
        NekoHTMLOptionModel m = new NekoHTMLOptionModel();
        NekoHTMLOptionModel obj = (NekoHTMLOptionModel)m.load();
     
        model.setBalance_tags(obj.isBalance_tags());
        model.setDoctype(obj.getDoctype());
        model.setLower_attr(obj.getLower_attr());
        model.setLower_elements(obj.getLower_elements());
        model.setOverride_doctype(obj.isOverride_doctype());
    }
    
    public void save(){
        model.save();
    }
    
    public void initModel(){
         adapter = new BeanAdapter(model, true);
        
        ValueModel stringModel = adapter.getValueModel("doctype");
        List possibleValues = new ArrayList();
        possibleValues.add("transitional");
        possibleValues.add("strict");
        possibleValues.add("auto");
        doctypeModel = new ComboBoxAdapter(possibleValues, stringModel);
        
        ValueModel stringModel1 = adapter.getValueModel("lower_attr");
        List possibleValues1 = new ArrayList();
        possibleValues1.add("upper");
        possibleValues1.add("lower");
        possibleValues1.add("match");
        lowerAttrsModel = new ComboBoxAdapter(possibleValues1, stringModel1);
        
        ValueModel stringModel2 = adapter.getValueModel("lower_elements");
        List possibleValues2 = new ArrayList();
        possibleValues2.add("upper");
        possibleValues2.add("lower");
        possibleValues2.add("match");
        lowerElemsModel = new ComboBoxAdapter(possibleValues2, stringModel2);
        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        lowerElementsLabel = new javax.swing.JLabel();
        lowerElementsOption = new javax.swing.JComboBox();
        lowerAttributesLabel = new javax.swing.JLabel();
        lowerAttributesOption = new javax.swing.JComboBox();
        balanceTagsOption = new javax.swing.JCheckBox();
        overrideDoctypeOption = new javax.swing.JCheckBox();
        doctypeOptions = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        lowerElementsLabel.setText("Lower elements");

        lowerElementsOption.setModel(lowerElemsModel);

        lowerAttributesLabel.setText("Lower attributes");

        lowerAttributesOption.setModel(lowerAttrsModel);

        balanceTagsOption.setText("balance_tags");
        balanceTagsOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        balanceTagsOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(balanceTagsOption, adapter.getValueModel("balance_tags"));

        overrideDoctypeOption.setText("override_doctype");
        overrideDoctypeOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        overrideDoctypeOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(overrideDoctypeOption, adapter.getValueModel("override_doctype"));

        doctypeOptions.setModel(doctypeModel);

        jLabel3.setText("Doctype");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lowerElementsLabel)
                    .add(lowerAttributesLabel)
                    .add(jLabel3))
                .add(32, 32, 32)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, doctypeOptions, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lowerAttributesOption, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lowerElementsOption, 0, 89, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 63, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(overrideDoctypeOption)
                    .add(balanceTagsOption))
                .add(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lowerElementsLabel)
                    .add(lowerElementsOption, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(overrideDoctypeOption))
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lowerAttributesLabel)
                    .add(lowerAttributesOption, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(balanceTagsOption))
                .add(29, 29, 29)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(doctypeOptions, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox balanceTagsOption;
    private javax.swing.JComboBox doctypeOptions;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lowerAttributesLabel;
    private javax.swing.JComboBox lowerAttributesOption;
    private javax.swing.JLabel lowerElementsLabel;
    private javax.swing.JComboBox lowerElementsOption;
    private javax.swing.JCheckBox overrideDoctypeOption;
    // End of variables declaration//GEN-END:variables
    private NekoHTMLOptionModel model;
}
