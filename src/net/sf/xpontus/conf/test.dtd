<!--The property is set to the absolute path of the file (within the specified directory).-->
<!ELEMENT absolute EMPTY>

<!ATTLIST absolute
           dir CDATA #REQUIRED>
<!ATTLIST absolute
           indirect CDATA "false">
<!ATTLIST absolute
           name CDATA #REQUIRED>
<!ATTLIST absolute
           value CDATA #REQUIRED>
<!--Arguments values to be added to list-->
<!ELEMENT arg EMPTY>

<!ATTLIST arg
           file CDATA #IMPLIED>
<!ATTLIST arg
           indirect CDATA "false">
<!ATTLIST arg
           schema CDATA #IMPLIED>
<!ATTLIST arg
           value CDATA #IMPLIED>
<!--The fully qualified class name of the exception. -->
<!--String eclass-->
<!--Required-->
<!--Change to isNotNull -->
<!--boolean converse-->
<!--Default: false-->
<!--A directory name-->
<!--Create and run a test step.-->
<!--net.sourceforge.jxunit.JXEval -->
<!ELEMENT eval EMPTY>

<!ATTLIST eval
           stepClass CDATA #REQUIRED>
<!ELEMENT exception EMPTY>

<!ATTLIST exception
           class CDATA #REQUIRED>
<!--Assert that an exception will be thrown by the subordinate steps. -->
<!--JXTextFail class  implements the interface testStep-->
<!--net.sourceforge.jxunit.JXTestFail-->
<!ELEMENT fail (#PCDATA)>

<!--Assert that an exception will be thrown by the subordinate steps. -->
<!--String file-->
<!--Required-->
<!--If the test property matches the value provided, then perform the subordinate steps. -->
<!--net.sourceforge.jxunit.JXTestIfEqual -->
<!ELEMENT ifEqual ((absolute | arg | eval | exception | fail | ifEqual | ifNull | isEqual | isNull | main | save | set | subst | trap)*)>

<!ATTLIST ifEqual
           converse CDATA "false">
<!ATTLIST ifEqual
           file CDATA #IMPLIED>
<!ATTLIST ifEqual
           indirect CDATA "false">
<!ATTLIST ifEqual
           name CDATA #REQUIRED>
<!ATTLIST ifEqual
           schema CDATA #IMPLIED>
<!ATTLIST ifEqual
           value CDATA #IMPLIED>
<!--If the test property is null, then perform the subordinate steps. -->
<!--net.sourceforge.jxunit.JXTestIfNull-->
<!ELEMENT ifNull ((absolute | arg | eval | exception | fail | ifEqual | ifNull | isEqual | isNull | main | save | set | subst | trap)*)>

<!ATTLIST ifNull
           converse CDATA "false">
<!ATTLIST ifNull
           name CDATA #REQUIRED>
<!-- The value or file given are the name of a test property -->
<!--boolean indirect-->
<!--Default: false-->
<!--Asserts that the test property matches the value provided.  -->
<!--net.sourceforge.jxunit.JXIsEqual  -->
<!ELEMENT isEqual EMPTY>

<!ATTLIST isEqual
           converse CDATA "false">
<!ATTLIST isEqual
           file CDATA #IMPLIED>
<!ATTLIST isEqual
           indirect CDATA "false">
<!ATTLIST isEqual
           message CDATA #IMPLIED>
<!ATTLIST isEqual
           name CDATA #REQUIRED>
<!ATTLIST isEqual
           schema CDATA #IMPLIED>
<!ATTLIST isEqual
           value CDATA #IMPLIED>
<!--Assert that the test property is null. -->
<!--net.sourceforge.jxunit.JXTestIsNull -->
<!ELEMENT isNull EMPTY>

<!ATTLIST isNull
           converse CDATA "false">
<!ATTLIST isNull
           message CDATA #REQUIRED>
<!ATTLIST isNull
           name CDATA #REQUIRED>
<!--Element jxu is the root-->
<!--net.sourceforge.jxunit.JXDo-->
<!ELEMENT jxu ((absolute | arg | eval | exception | fail | ifEqual | ifNull | isEqual | isNull | main | save | set | subst | trap)*)>

<!--calls the main method-->
<!ELEMENT main ((absolute | arg | eval | exception | fail | ifEqual | ifNull | isEqual | isNull | main | save | set | subst | trap)*)>

<!ATTLIST main
           class CDATA #REQUIRED>
<!--The files included in the directory scan should match the case-->
<!--String regexp-->
<!--boolean matchCase-->
<!--Text of the failure -->
<!--String message-->
<!--Required-->
<!--The name of the test property-->
<!--String name-->
<!--Required-->
<!-- The regular expression -->
<!--String regexp-->
<!--Required-->
<!--Save the value of the test property.-->
<!--net.sourceforge.jxunit.JXTestSave-->
<!ELEMENT save EMPTY>

<!ATTLIST save
           file CDATA #REQUIRED>
<!ATTLIST save
           indirect CDATA "false">
<!ATTLIST save
           name CDATA #REQUIRED>
<!ATTLIST save
           schema CDATA #IMPLIED>
<!--The name of a QIML file -->
<!--String schema-->
<!--Optional-->
<!--Set the Test Property to the value provided.-->
<!--net.sourceforge.jxunit.JXTestSet-->
<!ELEMENT set EMPTY>

<!ATTLIST set
           file CDATA #IMPLIED>
<!ATTLIST set
           indirect CDATA "false">
<!ATTLIST set
           name CDATA #REQUIRED>
<!ATTLIST set
           schema CDATA #IMPLIED>
<!ATTLIST set
           value CDATA #IMPLIED>
<!--The fully qualified class name of the test step. -->
<!--String stepClass-->
<!--Required-->
<!--Substitutes the string experession -->
<!--net.sourceforge.jxunit.JXSubst-->
<!ELEMENT subst EMPTY>

<!ATTLIST subst
           indirect CDATA "false">
<!ATTLIST subst
           matchCase CDATA "false">
<!ATTLIST subst
           name CDATA #REQUIRED>
<!ATTLIST subst
           regexp CDATA #REQUIRED>
<!ATTLIST subst
           value CDATA #IMPLIED>
<!--Assert that an exception will be thrown by the subordinate steps. -->
<!ELEMENT trap ((absolute | arg | eval | exception | fail | ifEqual | ifNull | isEqual | isNull | main | save | set | subst | trap)*)>

<!ATTLIST trap
           exception CDATA #REQUIRED>
<!ATTLIST trap
           message CDATA #REQUIRED>
<!--A literal value-->
<!--String value-->
<!--Optional--an alternative to file-->
