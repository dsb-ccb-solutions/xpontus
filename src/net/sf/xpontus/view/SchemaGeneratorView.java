/*
 * SchemaGeneratorView.java
 *
 * Created on July 28, 2006, 5:51 AM
 *
 *
 *  Copyright (C) 2005 Yves Zoundi
 *
 *  This library is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation; either version 2.1 of the License, or
 *  (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

package net.sf.xpontus.view;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.adapter.ComboBoxAdapter;
import com.jgoodies.binding.beans.BeanAdapter;
import com.jgoodies.binding.value.ValueModel;
import java.awt.event.ActionListener;
import java.beans.EventHandler;
import java.util.ArrayList;
import java.util.List;
import net.sf.xpontus.controller.handlers.SchemaGeneratorHandler;
import net.sf.xpontus.model.SchemaGenerationModel;

/**
 *
 * @author  Yves Zoundi
 */
public class SchemaGeneratorView extends javax.swing.JDialog{
    private SchemaGeneratorHandler controller;
    private BeanAdapter adapter;
    private SchemaGenerationModel model;
    private ComboBoxAdapter inputTypeAdapter, outputTypeAdapter;
    private ValueModel m1, m2;
    
    /** Creates new form SchemaGeneratorView 
     * @param parent 
     * @param modal 
     */
    public SchemaGeneratorView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);        
        controller = new SchemaGeneratorHandler(this); 
        model = new SchemaGenerationModel();
        adapter = new   BeanAdapter(model, true);
        m1 = adapter.getValueModel("useExternalDocument");
        m2 = adapter.getValueModel("openInEditor");
        initModel();
        initComponents();
        this.useExternalDocumentOption.setSelected(false);
        this.openInEditorOption.setSelected(false);
    }
        
    /**
     * 
     */
    public SchemaGeneratorView() {
        this(XPontusWindow.getInstance().getFrame(), true);
    }
    
    /**
     * 
     * @return 
     */
    public SchemaGenerationModel getModel(){
        return model;
    }
    
    private void initModel(){
        ValueModel inputValueModel = adapter.getValueModel("inputType");
        List inputValues = new ArrayList();
        inputValues.add("XML");
        inputValues.add("DTD");
        inputValues.add("RELAX NG Grammar");
        inputValues.add("RELAX NG Compact Grammar");
        inputTypeAdapter = new ComboBoxAdapter(inputValues, inputValueModel);
        
        ValueModel outputValueModel = adapter.getValueModel("outputType");
        List outputValues = new ArrayList();
        outputValues.add("DTD");
        outputValues.add("Relax NG Grammar");
        outputValues.add("XML Schema");
        outputValues.add("Relax NG Compact Grammar");
        outputTypeAdapter = new ComboBoxAdapter(outputValues, outputValueModel);
    }
    
    /**
     * 
     * @return 
     */
    public javax.swing.JButton getInputButton() {
        return inputButton;
    }
    
    
    /**
     * 
     * @return 
     */
    public javax.swing.JButton getOutputButton() {
        return outputButton;
    }
    
    /**
     * 
     * @return 
     */
    public javax.swing.JCheckBox getOpenInEditorOption() {
        return openInEditorOption;
    }
    
    /**
     * 
     * @param openInEditorOption 
     */
    public void setOpenInEditorOption(javax.swing.JCheckBox openInEditorOption) {
        this.openInEditorOption = openInEditorOption;
    }
    
    /**
     * 
     * @return 
     */
    public javax.swing.JCheckBox getUseCurrentDocumentOption() {
        return useExternalDocumentOption;
    }
    
    /**
     * 
     * @param useCurrentDocumentOption 
     */
    public void setUseCurrentDocumentOption(javax.swing.JCheckBox useCurrentDocumentOption) {
        this.useExternalDocumentOption = useExternalDocumentOption;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        inputTypeList = new javax.swing.JComboBox();
        inputTypeLabel = new javax.swing.JLabel();
        outputTypeLabel = new javax.swing.JLabel();
        outputTypeList = new javax.swing.JComboBox();
        inputOptionsPanel = new javax.swing.JPanel();
        inputButton = new javax.swing.JButton();
        inputTF = new javax.swing.JTextField();
        useExternalDocumentOption = new javax.swing.JCheckBox();
        outputOptionsPanel = new javax.swing.JPanel();
        outputButton = new javax.swing.JButton();
        outputTF = new javax.swing.JTextField();
        openInEditorOption = new javax.swing.JCheckBox();
        generateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Schema generator/converter");
        inputTypeList.setModel(inputTypeAdapter);
        
        inputTypeLabel.setText("Input type");
        
        outputTypeLabel.setText("Output type");
        
        outputTypeList.setModel(outputTypeAdapter);
        
        inputOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input options"));
        inputButton.setText("Input file");
        inputButton.setEnabled(false);
        inputButton.addActionListener(
                (ActionListener)
                EventHandler.create(ActionListener.class, controller, SchemaGeneratorHandler.INPUT_METHOD));
        
        inputTF.setEditable(false);
        Bindings.bind(inputTF, adapter.getValueModel("inputURI"));
        
        useExternalDocumentOption.setText("Use an external document");
        useExternalDocumentOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        useExternalDocumentOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(useExternalDocumentOption,adapter.getValueModel("useExternalDocument"));
        useExternalDocumentOption.addActionListener(
                (ActionListener)
                EventHandler.create(ActionListener.class, controller, SchemaGeneratorHandler.USE_CURRENT_DOCUMENT_METHOD));
        
        org.jdesktop.layout.GroupLayout inputOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(inputOptionsPanel);
        inputOptionsPanel.setLayout(inputOptionsPanelLayout);
        inputOptionsPanelLayout.setHorizontalGroup(
                inputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(inputOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, inputOptionsPanelLayout.createSequentialGroup()
                .add(inputButton)
                .add(38, 38, 38)
                .add(inputTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE))
                .add(useExternalDocumentOption))
                .addContainerGap())
                );
        inputOptionsPanelLayout.setVerticalGroup(
                inputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(inputOptionsPanelLayout.createSequentialGroup()
                .add(useExternalDocumentOption)
                .add(16, 16, 16)
                .add(inputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(inputButton)
                .add(inputTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
        
        outputOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output options"));
        outputButton.setText("Output file");
        outputButton.addActionListener(
                (ActionListener)
                EventHandler.create(ActionListener.class, controller, SchemaGeneratorHandler.OUTPUT_METHOD));
        
        outputTF.setEditable(false);
        Bindings.bind(outputTF, adapter.getValueModel("outputURI"));
        
        openInEditorOption.setText("Open the generated file in the editor");
        openInEditorOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        openInEditorOption.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Bindings.bind(openInEditorOption,adapter.getValueModel("openInEditor"));
        
        
        org.jdesktop.layout.GroupLayout outputOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(outputOptionsPanel);
        outputOptionsPanel.setLayout(outputOptionsPanelLayout);
        outputOptionsPanelLayout.setHorizontalGroup(
                outputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(outputOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(outputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(openInEditorOption)
                .add(outputOptionsPanelLayout.createSequentialGroup()
                .add(outputButton)
                .add(33, 33, 33)
                .add(outputTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)))
                .addContainerGap())
                );
        outputOptionsPanelLayout.setVerticalGroup(
                outputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(outputOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(openInEditorOption)
                .add(19, 19, 19)
                .add(outputOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(outputButton)
                .add(outputTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
                );
        
        generateButton.setText("Generate");
        generateButton.addActionListener(
                (ActionListener)
                EventHandler.create(ActionListener.class, controller, SchemaGeneratorHandler.GENERATE_METHOD));
        
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(
                (ActionListener)
                EventHandler.create(ActionListener.class, controller, SchemaGeneratorHandler.CLOSE_METHOD));
        
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                .add(org.jdesktop.layout.GroupLayout.LEADING, outputOptionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(inputTypeLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(outputTypeLabel))
                .add(39, 39, 39)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                .add(outputTypeList, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(inputTypeList, 0, 192, Short.MAX_VALUE)))
                .add(org.jdesktop.layout.GroupLayout.LEADING, inputOptionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(layout.createSequentialGroup()
                .add(151, 151, 151)
                .add(generateButton)
                .add(69, 69, 69)
                .add(cancelButton)))
                .addContainerGap())
                );
        
        
        layout.linkSize(new java.awt.Component[] {cancelButton, generateButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
        
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                .add(inputTypeLabel)
                .add(inputTypeList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(25, 25, 25)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                .add(outputTypeLabel)
                .add(outputTypeList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(inputOptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(21, 21, 21)
                .add(outputOptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(generateButton)
                .add(cancelButton))
                .addContainerGap(56, Short.MAX_VALUE))
                );
        pack();
    }//GEN-END:initComponents
    
// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton generateButton;
    private javax.swing.JButton inputButton;
    private javax.swing.JPanel inputOptionsPanel;
    private javax.swing.JTextField inputTF;
    private javax.swing.JLabel inputTypeLabel;
    private javax.swing.JComboBox inputTypeList;
    private javax.swing.JCheckBox openInEditorOption;
    private javax.swing.JButton outputButton;
    private javax.swing.JPanel outputOptionsPanel;
    private javax.swing.JTextField outputTF;
    private javax.swing.JLabel outputTypeLabel;
    private javax.swing.JComboBox outputTypeList;
    private javax.swing.JCheckBox useExternalDocumentOption;
// End of variables declaration//GEN-END:variables
    
}
